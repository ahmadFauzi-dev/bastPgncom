<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Nonamr extends MY_Controller {

	function __construct() {		
        parent::__construct();        
    }
	
	public function index ()
	{
		vd::dump($this->session->userdata('username'));
	}
		
	public function updateapproval()
	{
		
		$this->load->model('b_model');	
		$datass = $this->input->post('data', TRUE);
		$datapost = json_decode($datass);
		$setun = array();		
		foreach ($datapost as $items)
		{
			
			$table = " transform.fn_approvenonamr('".$items->tanggal_catat."','".$items->tanggal_catat."', '".$items->area."', '".$items->status_alert."','".$items->gdmr."','".$items->id_pelanggan."', '','".$this->session->userdata('username')."',2) ";
			// var_dump ($table);
			$entries 		= $this->b_model->get_all_datafunc($table, array() , 'All', '', '');		
		}			
		// var_dump ($table);
		$dadum['success'] = true;
		$dadum['data'] = $table;	
	    echo json_encode($dadum);		
	}

	public function updateapprovalAll()
	{
		
		$this->load->model('b_model');
		$table = " transform.fn_approvenonamr('".$this->input->post('startt')."','".$this->input->post('endd')."', '".$this->input->post('area')."', '".$this->input->post('stat')."','".$this->input->post('sbu')."','".$this->input->post('id_pel')."', '','".$this->session->userdata('username')."',2) ";		
		$entries = $this->b_model->get_all_datafunc($table, array() , 'All', '', '');
		
		$dadum['success'] = true;
		$dadum['data'] = $table;	
	    echo json_encode($dadum);		

	
	}
	
	public function loadrejectcategory()
	{	   
		$this->load->model('b_model');
		$filter = $this->input->get('filter', TRUE) > '' ? $this->input->get('filter', TRUE) : array();
		
		array_push($filter);
		
		$limit = $this->input->get('limit', TRUE) > '' ? $this->input->get('limit', TRUE) : 150;
	    $offset = $this->input->get('start', TRUE);
	    
	    $sorts = json_decode($this->input->get('sort', TRUE));
	    if ($sorts) {
		    foreach ($sorts as $sort) {
		        $orders[] = $sort->property.' '.$sort->direction;
		    }
		    $order_by = implode(', ', $orders);
	    } else {
	    	$order_by = 'rowid asc';
	    }		
		$total_entries = $this->b_model->count_all_data('v_categoryrejectnonamrrtpk', $filter);
		$entries = $this->b_model->get_all_data('v_categoryrejectnonamrrtpk', $filter , $limit, $offset, $order_by);
		
	    $data['success'] = true;	
		$data['total'] = $total_entries;		
	    $data['data'] = $entries;
	     
	    extjs_output($data);
		
	}
	
	public function updatereject()
	{
	
 	
		$this->load->model('b_model');	
		$datass = $this->input->post('datagrid', TRUE);
		$user_email = $this->session->userdata('user_email');
		$group_email = $this->session->userdata('group_email');
		$group_exp	  = explode(';',$group_email);		
		$to			  = array($user_email);		
		foreach($group_exp as $emp)
		{
			array_push($to,$emp);
		}

		$filter[0]['field'] = "isinfo";
		$filter[0]['data']  = array("comparison"	=> "eq",
								   "type"		=> "numeric",
								   "value"		=> 10);
		
		// $filter[1]['field'] = "areacode";
		// $filter[1]['data']  = array("comparison"	=> "eq",
								   // "type"			=> "string",
								   // "value"			=> $this->input->post('areaval'));
								   
		$datatemplate = $this->b_model->get_all_data('general_info', $filter , 2 , 0 , '');
		
		$email_temp   = $datatemplate[0]->email;
		$email_exp	  = explode(';',$email_temp);

		foreach($email_exp as $emp)
		{
			array_push($to,$emp);
		}

		$subject 	= $datatemplate[0]->subject;
		$pesan 		= $datatemplate[0]->template;		
		
		$datapost = json_decode($datass);
		$setun = array();
		
		$n=0;		
		$path = substr(BASEPATH,0,-7).'asset/xls/';
		$topath = substr(BASEPATH,0,-7).'asset/tmp/';	
		$objReader = PHPExcel_IOFactory::createReader('Excel5');
		$objPHPExcel = $objReader->load($path.'reject_data_nonamr.xls');
		$baseRow = 3;		
		$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Reject Data Non AMR / RTPK' );	
		
		foreach ($datapost as $items)
		{
			$row = $baseRow + $n;
			$upfilt = array('rowid' => $items->rowid);
					
			$dataapp = array(
				'status' => 4,
				'updperson' => $this->session->userdata('username'),				
				'upddate' => dateTonum(date('Y-m-d H:i:s'))
			);

			$fieldsval = "";
			foreach ($items->field as $r)
			{
				$fieldsval .=$r.",";
			}
			$fieldsval = substr($fieldsval,0,-1);
			$datainfo = array (
				'reffidpengukuran' => $items->rowid,
				'jenispengukuran' => 5,
				'category' => $items->kategori,
				'fields' => $fieldsval,
				'keterangan' => $items->keterangan,
				'creperson' => $this->session->userdata('username'),				
				'credate' => dateTonum(date('Y-m-d H:i:s'))			
			);	

			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)
							  ->setCellValue('B'.$row, $items->status_alert)
							  ->setCellValue('C'.$row, $items->gdmr)
							  ->setCellValue('D'.$row, $items->area)
							  ->setCellValue('E'.$row, "'".$items->id_pelanggan)
							  ->setCellValue('F'.$row, $items->nama_pelanggan)
							  ->setCellValue('G'.$row, $items->streamid)
							  ->setCellValue('H'.$row, $items->tanggal_catat)
							  ->setCellValue('I'.$row, $items->pressure)
							  ->setCellValue('J'.$row, $items->temperature)
							  ->setCellValue('K'.$row, $items->stand_awal)
							  ->setCellValue('L'.$row, $items->stand_akhir)
							  ->setCellValue('M'.$row, $items->volume)
							  ->setCellValue('N'.$row, $items->corrected_volume)
							  ->setCellValue('O'.$row, $items->cf)
							  ->setCellValue('P'.$row, $items->asset_active)
							  ->setCellValue('Q'.$row, $items->serial_meter)
							  ->setCellValue('R'.$row, $items->periode_catat)
							  ->setCellValue('S'.$row, date('Y-m-d H:i:s'))
							  ->setCellValue('T'.$row, $items->kategori)
							  ->setCellValue('U'.$row, $fieldsval)
							  ->setCellValue('V'.$row, $items->keterangan);
			
			$this->b_model->insert_data('reject_info', $datainfo);
			
			
			$this->b_model->update_all('valdy_avr', $upfilt , $dataapp);			

			array_push($setun, $datanya);
			$n++;
		}	
		
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		$file = "".$topath."Reject_Data_nonamr". $this->input->post('areaval') . ".xls";
		$objWriter->save($file);

		$this->load->library('PHPMailerAutoload');
		$mail = new PHPMailer();
        $mail->isSMTP();
		$mail->SMTPDebug  = 2;
		$mail->Headers= 'Content-type: text/html; charset=iso-8859-1';
		$mail->Host = 'mail.pgn.co.id';
        $mail->Port = '25'; 
        $mail->SMTPAuth = false;
	    $mail->Username = 'corp\mng1';
        //$mail->Password = 'corp.PGN';
        $mail->From = 'mng1@pgn.co.id';
		$mail->FromName = 'SIPGAS Module EM';
		$mail->SMTPSecure = "tls";
		$mail->WordWrap = 50; 
		
		//$mail->AddAddress('hakimgy@gmail.com', 'Hakim GY');
		//$mail->AddAddress('toni.alexandra@pgascom.co.id', 'Toni Alexandra');
		//$mail->AddAddress('verdy.tarandeli@gmail.com', 'Verdy Tarandeli');
				
		foreach($to as $r)
		{
			
			if(!empty($r))
			{
				$mail->addAddress($r);
			}
		}
		$mail->Subject = $subject;
		$mail->Body 	= $pesan;
		$mail->IsHTML(true);		
		$mail->AddAttachment($file);
        $mail->send();
		//$this->send_emailmultiaddress($to, $subject, $pesan, $file);
		//delete_files( $topath );		
		// $this->send_emailmultiaddress( $to, $subject, $pesan, $file );
		delete_files( $topath );
		$dadum['success'] = true;
		$dadum['data'] = $setun;	
	    echo json_encode($dadum);	
	
	}
	
	public function recalculate()
	{		
		echo "OK";
		$filter = array();
		$limit = $this->input->post('limit', TRUE) > '' ? $this->input->post('limit', TRUE) : 25;
	    $offset = $this->input->post('start', TRUE);
		$kemarin = date("Y-m-d", time() - 86400);
		$kemarinlusa = date("Y-m-d", time() - 86400);
		$canrd = whereTofilter('sbu', $this->session->userdata('rd') , 'list' , '');	
		$canarea = whereTofilter('area', $this->session->userdata('area') , 'list' , '');
		$startt 	= $this->input->post('startt',true) >'' ? whereTofilter('tanggal', $this->input->post('startt',true) , 'date' , 'gt') : $kemarinlusa ;
		$endd 		= $this->input->post('endd',true) > '' ? whereTofilter('tanggal', $this->input->post('endd',true) , 'date' , 'lt') : $kemarin ;		
		$sbu 		= $this->input->post('sbu',true) > '' ? whereTofilter('sbu', $this->input->post('sbu',true) , 'string' , 'eq') : $canrd ;
		$area 		= $this->input->post('area',true) > '' ? whereTofilter('area', $this->input->post('area',true) , 'string' , 'eq') : $canarea ;
		$id_pel 	= $this->input->post('id_pel',true) > '' ? whereTofilter('id_pel', $this->input->post('id_pel',true) , 'string' , '') : whereTofilter('id_pel', '' , 'string' , '') ;
		$namapel 	= $this->input->post('namapel',true) > '' ? whereTofilter('namapel', $this->input->post('namapel',true) , 'string' , '') : whereTofilter('namapel', '' , 'string' , '') ;	
		$sql = $this->db->query("SELECT updateghv('".$startt['data']['value']."', '".$endd['data']['value']."', '".$sbu['data']['value']."', '".$area['data']['value']."', '".$id_pel['data']['value']."', '".$namapel['data']['value']."')");
	}
	
	public function updateunapproved()
	{
		$this->load->model('b_model');		
		$datass = $this->input->post('data', TRUE);
		$datapost = json_decode($datass);		
		$user_email = $this->session->userdata('user_email');
		$group_email = $this->session->userdata('group_email');
		$group_exp	  = explode(';',$group_email);		
		$to			  = array($user_email);		
		foreach($group_exp as $emp)
		{
			array_push($to,$emp);
		}
		$filter[0]['field'] = "isinfo";
		$filter[0]['data'] = array("comparison"	=> "eq",
								   "type"		=> "numeric",
								   "value"		=> 12 );	
		// $filter[1]['field'] = "areacode";
		// $filter[1]['data']  = array("comparison"	=> "eq",
								   // "type"			=> "string",
								   // "value"			=> $this->input->post('areaval'));
		
		$datatemplate = $this->b_model->get_all_data('general_info', $filter , 2 , 0 , '');		
		$email_temp   = $datatemplate[0]->email;
		$email_exp	  = explode(';',$email_temp);
		foreach($email_exp as $emp)
		{
			array_push($to,$emp);
		}
		$subject 	= $datatemplate[0]->subject;
		$pesan 		= $datatemplate[0]->template;			
		$setun = array();		
		$n=0;		
		$path = substr(BASEPATH,0,-7).'asset/xls/';
		$topath = substr(BASEPATH,0,-7).'asset/tmp/';	
		$objReader = PHPExcel_IOFactory::createReader('Excel5');
		$objPHPExcel = $objReader->load($path.'unapprove_nonamr.xls');
		$baseRow = 3;		
		$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Unapproved Data Non AMR Penyaluran Final' );	
		
		foreach ($datapost as $items)
		{			
			$row = $baseRow + $n;
			$upfilt = array('rowid' => $items->rowid );
			$dataupdate = array(				
				'updperson' => $this->session->userdata('username'),				
				'upddate' => dateTonum(date('Y-m-d H:i:s')),				
				// 'updcnt' => intval ($items->updcnt) + 1,
				'status' => 2,
				'isapproval' => 2
			);	
			
			$this->b_model->update_all('penyaluran_final_avr', $upfilt , $dataupdate);
			
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)
							  ->setCellValue('B'.$row, $items->status_alert)
							  ->setCellValue('C'.$row, $items->gdmr)
							  ->setCellValue('D'.$row, $items->area)
							  ->setCellValue('E'.$row, $items->periode_catat)
							  ->setCellValue('F'.$row, $items->tanggal_catat)
							  ->setCellValue('G'.$row, $items->tanggal_kirim)
							  ->setCellValue('H'.$row, $items->jenis_rekening)
							  ->setCellValue('I'.$row, $items->jenis_pelanggan)
							  ->setCellValue('J'.$row, "'".$items->id_pelanggan)
							  ->setCellValue('K'.$row, $items->streamid)
							  ->setCellValue('L'.$row, $items->nama_pelanggan)
							  ->setCellValue('M'.$row, $items->asset_active)
							  ->setCellValue('N'.$row, $items->serial_meter)
							  ->setCellValue('O'.$row, $items->stand_awal)
							  ->setCellValue('P'.$row, $items->stand_akhir)
							  ->setCellValue('Q'.$row, $items->volume)
							  ->setCellValue('R'.$row, $items->pressure)
							  ->setCellValue('S'.$row, $items->temperature)
							  ->setCellValue('T'.$row, $items->cf)
							  ->setCellValue('U'.$row, $items->ghv)							  
							  ->setCellValue('V'.$row, $items->energy)							  
							  ->setCellValue('W'.$row, $this->session->userdata('username'))
							  ->setCellValue('X'.$row, date('Y-m-d H:i:s'));
			
			array_push($setun, $datanya);
			$n++;	
		}		
		
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		$file = "".$topath."Unapproved_Data_non_AMR.xls";
		$objWriter->save($file);

		//$this->send_emailmultiaddress( $to, $subject, $pesan, $file );
		$this->load->library('PHPMailerAutoload');
		$mail = new PHPMailer();
        $mail->isSMTP();
		$mail->SMTPDebug  = 2;
		$mail->Headers= 'Content-type: text/html; charset=iso-8859-1';
		$mail->Host = 'mail.pgn.co.id';
        $mail->Port = '25'; 
        $mail->SMTPAuth = false;
	    $mail->Username = 'corp\mng1';
        //$mail->Password = 'corp.PGN';
        $mail->From = 'mng1@pgn.co.id';
		$mail->FromName = 'SIPGAS Module EM';
		$mail->SMTPSecure = "tls";
		$mail->WordWrap = 50; 
		
		//$mail->AddAddress('hakimgy@gmail.com', 'Hakim GY');
		//$mail->AddAddress('toni.alexandra@pgascom.co.id', 'Toni Alexandra');
		//$mail->AddAddress('verdy.tarandeli@gmail.com', 'Verdy Tarandeli');
				
		foreach($to as $r)
		{
			
			if(!empty($r))
			{
				$mail->addAddress($r);
			}
		}
		$mail->Subject = $subject;
		$mail->Body 	= $pesan;
		$mail->IsHTML(true);		
		$mail->AddAttachment($file);
        $mail->send();		
		
		// delete_files( $topath );
	    
	}	
	
	public function toexcelfinal()
	{
		$this->load->model('b_model');
		
		$limit = 'All';
	    $offset = 0;
	    $sorts = json_decode($this->input->get('sort', TRUE));
		$typeexport = $this->input->get('typeexport', True);
		$filterss =array();
		$filter = json_decode($this->input->get('filter'),true);
		$tanggalawal = $filter[0]['data']['value'];
		$tanggalakhir = $filter[1]['data']['value'];
		$sbu = $filter[2]['data']['value'];
		$areanya = $filter[3]['data']['value'];
		$id_pel = $filter[4]['data']['value'];
		$nama_pel = $filter[5]['data']['value'];
		if (empty($filter)){			
			$filter =  array();			
			$kemarin = whereTofilter('tanggal_catat', date("Y-m-d", time() - 86400) , 'date' , 'lt');
			$kemarinlusa = whereTofilter('tanggal_catat', date("Y-m-d", time() - 172800) , 'date' , 'gt');
			$sbu = '' ;
			$area = '' ;
			$id_pel = '' ;
			$namapel =  '' ;		
			array_push($filter, $kemarin, $kemarinlusa, $sbu, $area, $id_pel, $namapel );
		} 		
		
		$isapproval = whereTofilter('isapproval', 1 , 'numeric' , 'eq');
		
		if ($typeexport === 'Validate'){
			$validate = whereTofilter('status_alert', 2 , 'numeric' , 'eq');
		} else if ($typeexport === 'Anomali') {
			$validate = whereTofilter('status_alert', 2 , 'numeric' , 'noteq');
		}
		
		array_push($filter, $validate, $isapproval);	
		
		
		if ($sorts) {
		    foreach ($sorts as $sort) {
		        $orders[] = $sort->property.' '.$sort->direction;
		    }
		    $order_by = implode(', ', $orders);
	    } else {
	    	$order_by = 'tanggal_catat,status_alert,rowid asc';
	    }	
		
		$query = " getpenyaluranfinal_avr(
						 '',
						 '',
						 '".$tanggalawal."',
						 '".$tanggalakhir."',
						 '".$sbu."',
						 '".$areanya."',
						 '1,2',
						 '".$id_pel."',
						 upper('".$nama_pel."'),2,2)";				 

	    $count 		 = $this->b_model->count_all_data_func($query, $filterss);
		$dataas 		= $this->b_model->get_all_datafunc($query, $filterss , $limit, $offset, $order_by);
		
		
		// $dataas = $this->b_model->get_all_data('v_h_penyaluran_amr_daily_reals_export', $filter , $limit, $offset, $order_by);
		$n=0;
		
		
		$path = substr(BASEPATH,0,-7).'asset/xls/';		
		
		$objReader = PHPExcel_IOFactory::createReader('Excel2007');
		$objPHPExcel = $objReader->load($path.'data_final_nonamr.xlsx');
		if (!empty($areanya) || $areanya != ''){
			$objPHPExcel->getActiveSheet()->setCellValue('A1', $typeexport.' Data Penyaluran Final '. $areanya );
		} else {
			$objPHPExcel->getActiveSheet()->setCellValue('A1', $typeexport.' Data Penyaluran Final '. date("Y-m-d", time() - 172800) . '-' . date("Y-m-d", time() - 86400) );
		}
		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
		$baseRow = 3;
		
		foreach ($dataas as $datarow) {
			$row = $baseRow + $n;
			
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)
							  ->setCellValue('B'.$row, $datarow->status_alert)
							  ->setCellValue('C'.$row, $datarow->gdmr)
							  ->setCellValue('D'.$row, $datarow->area)
							  ->setCellValue('E'.$row, $datarow->periode_catat)
							  ->setCellValue('F'.$row, $datarow->tanggal_catat)
							  ->setCellValue('G'.$row, $datarow->tanggal_kirim)
							  ->setCellValue('H'.$row, $datarow->jenis_rekening)
							  ->setCellValue('I'.$row, $datarow->jenis_pelanggan)
							  ->setCellValue('J'.$row, "'".$datarow->id_pelanggan)
							  ->setCellValue('K'.$row, $datarow->streamid)
							  ->setCellValue('L'.$row, $datarow->nama_pelanggan)
							  ->setCellValue('M'.$row, $datarow->asset_active)
							  ->setCellValue('N'.$row, $datarow->serial_meter)
							  ->setCellValue('O'.$row, is_null($datarow->stand_awal) ? "-" : $datarow->stand_awal ) 
							  ->setCellValue('P'.$row, is_null($datarow->stand_akhir) ? "-" : $datarow->stand_akhir ) 
							  ->setCellValue('Q'.$row, is_null($datarow->volume) ? "-" : $datarow->volume )
							  ->setCellValue('R'.$row, is_null($datarow->pressure) ? "-" : $datarow->pressure ) 
							  ->setCellValue('S'.$row, is_null($datarow->temperature) ? "-" : $datarow->temperature )
							  ->setCellValue('T'.$row, is_null($datarow->cf) ? "-" : $datarow->cf )
							  ->setCellValue('U'.$row, is_null($datarow->ghv) ? "-" : $datarow->ghv )						  
							  ->setCellValue('V'.$row, is_null($datarow->energy) ? "-" : $datarow->energy );
			$n++;
		}
		
		$conditional = new PHPExcel_Style_Conditional();
		$conditional->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)
				->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_EQUAL)
				->addCondition('"-"');
		$conditional->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setARGB('ffa7a7');		
		
		$conditional2 = new PHPExcel_Style_Conditional();
		$conditional2->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)
				->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_NOTEQUAL)
				->addCondition('"-"');
		$conditional2->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setARGB('98fb98');		
		
		
		$conditional3 = new PHPExcel_Style_Conditional();
		$conditional3->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)
				->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_EQUAL)
				->addCondition('""');
		$conditional3->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setARGB('ffa7a7');
		
		$conditionalStyles = $objPHPExcel->getActiveSheet()->getStyle('A3')->getConditionalStyles();
		array_push($conditionalStyles, $conditional, $conditional2,$conditional3 );               
		$objPHPExcel->getActiveSheet()->getStyle('A$3:V$'.$row)->setConditionalStyles($conditionalStyles);		
				
		header('Content-Disposition: attachment;filename="PenyaluranFinal_Data_NONAMR_'.date("Y-m-d").'.xlsx"'); 
        header('Cache-Control: max-age=0'); //no cache	
				
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save('php://output');

	
	}
	
	public function toexcel()
	{
		$this->load->model('b_model');
		
		$limit = 'All';
	    $offset = 0;
	    $sorts = json_decode($this->input->get('sort', TRUE));
		$typeexport = $this->input->get('typeexport', True);
		$filter = json_decode($this->input->get('filter'),true);
		$sbunya = $filter[2]['data']['value'];
		$areanya = $filter[3]['data']['value'];
		$id_pel = $filter[4]['data']['value'];
		$namapel =  $filter[5]['data']['value'];
		// $canrd = whereTofilter('sbu', $this->session->userdata('rd') , 'list' , '');	
		// $canarea = whereTofilter('area', $this->session->userdata('area') , 'list' , '');
		$kemarin = date("Y-m-d", time() - 86400);
		$kemarinlusa = date("Y-m-d", time() - 86400);
		$startt = $filter[0]['data']['value'] > '' ?  $filter[0]['data']['value'] : $kemarinlusa ;
		$endd = $filter[1]['data']['value'] > '' ?  $filter[1]['data']['value']: $kemarin ;		
		
		// $vtable = " getvaldy_avr('', '', '".$startt."', '".$endd."', '".$sbunya."', '".$areanya."', '1,2', '".$id_pel."', '".$namapel."', 2, 2) where status_alert = 2 ";
		//vd::dump($vtable);
		//die();
		
		if($filter[3]['data']['value'] == '')
		{
			$area = $filter[3]['data']['value']  ;
			// array_push($filter,$area);	
		}
		if($filter[2]['data']['value'] == '')
		{
			$sbu = $filter[2]['data']['value']  ;
			// array_push($filter,$sbu);	
		}
		if (empty($filter)){			
			$filter =  array();			
			$startt = $this->input->get('startt',true) > '' ?  $this->input->get('startt',true) : $kemarinlusa ;
			$endd = $this->input->get('endd',true) > '' ?  $this->input->get('endd',true): $kemarin ;		
			
			$id_pel = '' ;
			$namapel =  '' ;		
			array_push($filter, $anomali,$area,$sbu);
			//array_push($filter, $kemarin, $kemarinlusa, $sbu, $area, $id_pel, $namapel );
		}
		
		
		$isapproval = whereTofilter('isapproval', 'NULL' , 'boolean' , '');
		
		if ($typeexport === 'Validate'){
			$vtable = " getvaldy_avr('', '', '".$startt."', '".$endd."', '".$sbunya."', '".$areanya."', '1,2', '".$id_pel."', '".$namapel."', 2, 2) where status_alert = 2 ";
		} else if ($typeexport === 'Anomali') {
			$vtable = " getvaldy_avr('', '', '".$startt."', '".$endd."', '".$sbunya."', '".$areanya."', '1,2', '".$id_pel."', '".$namapel."', 2, 2) where status_alert <> 2";
		}
		
		array_push($filter, $validate);
		$filters = generate_filter($filter, 'okeh');
		
		// vd::dump($filter);	
		
		if ($sorts) {
		    foreach ($sorts as $sort) {
		        $orders[] = $sort->property.' '.$sort->direction;
		    }
		    $order_by = implode(', ', $orders);
	    } else {
	    	$order_by = 'tanggal desc';
	    }		
		
		// $vtable = "get_alert_daily15( '', '".$startt."', '".$endd."', '".$id_pel."', '".$namapel."')";
		$dataas = $this->b_model->get_all_datafunc($vtable, $filters , $limit, $offset, '');
		//$count  = $this->b_model->count_all_data($vtable, $filter);
		// $count = $this->b_model->total_getalert_daily( '', $startt, $endd, $id_pel, $namapel, $filters );
		//$dataas = $this->b_model->getalert_daily( '', $startt, $endd, $id_pel, $namapel , $filters , $limit, $offset, $order_by);
		$n=0;
		
		$path = substr(BASEPATH,0,-7).'asset/xls/';		
		
		$objReader = PHPExcel_IOFactory::createReader('Excel2007');
		$objPHPExcel = $objReader->load($path.$typeexport.'_data_nonamr.xlsx');
		if (!empty($areanya) || $areanya != ''){
			$objPHPExcel->getActiveSheet()->setCellValue('A1', $typeexport.' Data '. $areanya );
		} else {
			$objPHPExcel->getActiveSheet()->setCellValue('A1', $typeexport.' Data '. date("Y-m-d", time() - 172800) . '-' . date("Y-m-d", time() - 86400) );
		}
		$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setAutoSize(true);
		$baseRow = 3;
		
		if ($typeexport === 'Validate'){		
			foreach ($dataas as $datarow) {
				$row = $baseRow + $n;
				
				$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)
											  ->setCellValue('B'.$row, $datarow->status_alert)
											  ->setCellValue('C'.$row, $datarow->sbu)
											  ->setCellValue('D'.$row, $datarow->area)
											  ->setCellValue('E'.$row, $datarow->periode_catat)
											  ->setCellValue('F'.$row, $datarow->tanggal_catat)
											  ->setCellValue('G'.$row, $datarow->tanggal_kirim)
											  ->setCellValue('H'.$row, $datarow->jargas)
											  ->setCellValue('I'.$row, $datarow->jenis_pelanggan )
											  ->setCellValue('J'.$row, $datarow->id_pelanggan )
											  ->setCellValue('K'.$row, $datarow->streamid )
											  ->setCellValue('L'.$row, $datarow->nama_pelanggan )
											  ->setCellValue('M'.$row, $datarow->asset_active )
											  ->setCellValue('N'.$row, $datarow->serial_meter )
											  ->setCellValue('O'.$row, is_null($datarow->stand_awal) ? "-" : $datarow->stand_awal )
											  ->setCellValue('P'.$row, is_null($datarow->stand_akhir) ? "-" : $datarow->stand_akhir )
											  ->setCellValue('Q'.$row, is_null($datarow->volume) ? "-" : $datarow->volume )
											  ->setCellValue('R'.$row, is_null($datarow->corrected_volume) ? "-" : $datarow->corrected_volume )
											  ->setCellValue('S'.$row, is_null($datarow->pressure) ? "-" : $datarow->pressure )
											  ->setCellValue('T'.$row, is_null($datarow->temperature) ? "-" : $datarow->temperature )
											  ->setCellValue('U'.$row, is_null($datarow->cf) ? "-" : $datarow->cf )
											  ->setCellValue('V'.$row, is_null($datarow->alamat_pelanggan) ? "-" : $datarow->alamat_pelanggan )
											  ->setCellValue('W'.$row, is_null($datarow->keterangan) ? "-" : $datarow->keterangan );
				$n++;
			}
		} else {
			foreach ($dataas as $datarow) {
				$row = $baseRow + $n;
				
				$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)
											 ->setCellValue('B'.$row, $datarow->status_alert)
											  ->setCellValue('C'.$row, $datarow->sbu)
											  ->setCellValue('D'.$row, $datarow->area)
											  ->setCellValue('E'.$row, $datarow->periode_catat)
											  ->setCellValue('F'.$row, $datarow->tanggal_catat)
											  ->setCellValue('G'.$row, $datarow->tanggal_kirim)
											  ->setCellValue('H'.$row, $datarow->jargas)
											  ->setCellValue('I'.$row, $datarow->jenis_pelanggan )
											  ->setCellValue('J'.$row, $datarow->id_pelanggan )
											  ->setCellValue('K'.$row, $datarow->streamid )
											  ->setCellValue('L'.$row, $datarow->nama_pelanggan )
											  ->setCellValue('M'.$row, $datarow->asset_active )
											  ->setCellValue('N'.$row, $datarow->serial_meter )
											  ->setCellValue('O'.$row, is_null($datarow->stand_awal) ? "-" : $datarow->stand_awal )
											  ->setCellValue('P'.$row, is_null($datarow->stand_akhir) ? "-" : $datarow->stand_akhir )
											  ->setCellValue('Q'.$row, is_null($datarow->volume) ? "-" : $datarow->volume )
											  ->setCellValue('R'.$row, is_null($datarow->corrected_volume) ? "-" : $datarow->corrected_volume )
											  ->setCellValue('S'.$row, is_null($datarow->pressure) ? "-" : $datarow->pressure )
											  ->setCellValue('T'.$row, is_null($datarow->temperature) ? "-" : $datarow->temperature )
											  ->setCellValue('U'.$row, is_null($datarow->cf) ? "-" : $datarow->cf )
											  ->setCellValue('V'.$row, is_null($datarow->alamat_pelanggan) ? "-" : $datarow->alamat_pelanggan )
											  ->setCellValue('W'.$row, is_null($datarow->keterangan) ? "-" : $datarow->keterangan );											  
				$n++;
			}			
		}	
		
		$conditional = new PHPExcel_Style_Conditional();
		$conditional->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)
				->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_EQUAL)
				->addCondition('"-"');
		$conditional->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setARGB('ffa7a7');		
		$conditional2 = new PHPExcel_Style_Conditional();
		$conditional2->setConditionType(PHPExcel_Style_Conditional::CONDITION_CELLIS)
				->setOperatorType(PHPExcel_Style_Conditional::OPERATOR_NOTEQUAL)
				->addCondition('"-"');
		$conditional2->getStyle()->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getEndColor()->setARGB('98fb98');		
		$conditionalStyles = $objPHPExcel->getActiveSheet()->getStyle('A3')->getConditionalStyles();
		array_push($conditionalStyles, $conditional, $conditional2 );      

		if ($typeexport === 'Validate'){
			$objPHPExcel->getActiveSheet()->getStyle('A$3:W$'.$row)->setConditionalStyles($conditionalStyles);		
		} else {
			$objPHPExcel->getActiveSheet()->getStyle('A$3:W$'.$row)->setConditionalStyles($conditionalStyles);	
		}	
		header('Content-Disposition: attachment;filename="'.$typeexport.'_Data_NonAMR_'.date("Y-m-d").'.xlsx"'); 
        header('Cache-Control: max-age=0'); //no cache	
				
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
		$objWriter->save('php://output');

		
	
	}
	
	public function updatekoreksi()
	{
		$this->load->model('b_model');	
		$datass 		= $this->input->post('data', TRUE);
		$rowid 			= $this->input->post('rowid',true);
		$ft 			= $this->input->post('ft',true);
		$fp 			= $this->input->post('fp',true);
		$volcorrected 	= $this->input->post('volcorrected',true);
		$refftaxation 	= $this->input->post('reffidtaxation',true);
		$priodeend 		= $this->input->post('priodeend',true);
		$record 		= $this->input->post('record',true);
		$datapost 		= json_decode($datass);
		$recordpost 	= json_decode($record);
		$setun1 		= array();	
		if (!empty($datapost)) {
		foreach ($datapost as $items)
		{
			$upfilt  = array('rowid' => $items->rowid);
			$dataapp = array(
				'isapproval' => 1,
				'updperson' => $this->session->userdata('username'),				
				'upddate' => dateTonum(date('Y-m-d H:i:s'))
			);
			$penyaluranid = $items->rowid;
			$ambil = array(
				'status_alert' => $items->status_alert,
				'sbu'  => $items->gdmr,
				'area'  => $items->area,
				'areacode'  => $items->areacode,
				'streamid'  => $items->streamid,
				'asset_active' => $items->asset_active,
				'alamat_pelanggan' => $items->alamat_pelanggan,
				'idrefpelanggan'  => $items->id_pelanggan,
				'namapel'  => $items->nama_pelanggan,
				'typeapproved' => 2,
				'penyaluranid' => $items->rowid,
				'jasgas' => $items->jasgas,
				'periodecatat'=> dateTonumlengkap($items->periode_catat),
				'jenis_rekening' => $items->jenis_rekening,
				'jenis_pelanggan' => $items->jenis_pelanggan,
				'methode_pencatatan' => $items->methode_pencatatan,
				'serial_meter' => $items->serial_meter,
				'tanggal_catat' => dateTonumlengkap($items->tanggal_catat),
				'tanggal_kirim' => dateTonumlengkap($items->tanggal_kirim),
				'no_buku' => null,
				'reffcrmrowid' => $items->reffcrmrowid
				);
				
			if (!empty($penyaluranid)){
				$unapp = array('rowid' => $penyaluranid );
				$dataupdate = array(				
					'updperson' => $this->session->userdata('username'),				
					'upddate' => dateTonum(date('Y-m-d H:i:s')),				
					'status' => 2,
					'isapproval' => 2,
					'reffidtaxation' => $rowid
				);	
				$this->b_model->update_all('penyaluran_final_avr', $unapp , $dataupdate);
			}
			if (!empty($items->rowid)) {
					$this->b_model->update_all('valdy_avr', $upfilt , $dataapp);
			}
		} 
	} else {
			$ambil = array(
			 'idrefpelanggan' => $recordpost->customercode,
			 'streamid' 	  => $recordpost->streamid,
			 'typeapproved'   => 2,			 
			 'penyaluranid'   => null,
			 'status_alert'   => 0,
			 'serial_meter'   => $recordpost->serialnumber,
			 'namapel'		  => $recordpost->customername,
			 'sbu'	=> $recordpost->sbuname,
			 'area' => $recordpost->areaname,
			 'areacode' => $recordpost->area,
			 'periodecatat' => $recordpost->periode_catat,
			 'tanggal_catat' => $recordpost->badatenum,
			 'methode_pencatatan' => $recordpost->methode_catat,
			 'jenis_rekening' => $recordpost->jenis_rekening,
			 'jenis_pelanggan' => $recordpost->jenis_pelanggan,
			 'tanggal_kirim' => null,
			 'no_buku' => $recordpost->no_buku,
			 'reffcrmrowid' => null
			);
	}
			
		$a_datanya = array(	
			'volume'  => $volcorrected,			
			'streamid'  => $ambil['streamid'],
			'idrefpelanggan'  => $ambil['idrefpelanggan'],
			'namapel'  => $ambil['namapel'],
			// 'fdatetime'  => $priodeend,
			'reffidtaxation' => $rowid,	
			'serialmeter' =>  $ambil['serial_meter'],
			'codetaxation' => $refftaxation,
			'delflag' => 1,									
			'creperson' => $this->session->userdata('username'),				
			'credate' => dateTonum(date('Y-m-d H:i:s')),				
			'isapproval' => 1,
			'typeapproved' => $ambil['typeapproved'],
			'status_alert' => $ambil['status_alert'],
			'valdy_avrrowid' => $ambil['penyaluranid'],	
			'sbu'  =>$ambil['sbu'],
			'area'  =>$ambil['area'],
			'areacd' => $ambil['areacode'],
			'no_buku' => $ambil['no_buku'],
			'jenis_rekening' => $ambil['jenis_rekening'],
			'jenis_pelanggan' => $ambil['jenis_pelanggan'],
			'methode_pencatatan' => $ambil['methode_pencatatan'],
			'periodecatat' => $ambil['periodecatat'],
			'tanggalcatat' => $ambil['tanggal_catat'],
			'sentdate' => $ambil['tanggal_kirim'],
			'status' => 1,
			'typeofdata' => 2,
			'reffcrmrowid' => $ambil['reffcrmrowid']
		); 

		// vd::dump($a_datanya);
		// die();
		$appr = $this->b_model->insert_data('penyaluran_final_avr', $a_datanya);			
		// $a_datanya['penyaluran_final_avrrowid'] = "PAVR".$appr ;
		// $this->b_model->insert_data('h_penyaluran_final_avr', $a_datanya);
		
		$where = array('rowid' => $rowid);
		$c_datanya = array(				
					'delflag' => 1,									
					'updperson' => $this->session->userdata('username'),				
					'isapproval' => 1
		);
		$setun2 = $this->b_model->update_all('taxation_avr', $where, $c_datanya);
		$json['success'] = true;
		$json['data'] = $setun1;	
	    echo json_encode($json);	
	}
	
	public function updaterejectkoreksi()
	{
		
		$this->load->model('b_model');	
		$datass = $this->input->post('datagrid', TRUE);
		$user_email = $this->session->userdata('user_email');
		$group_email = $this->session->userdata('group_email');
		$group_exp	  = explode(';',$group_email);		
		$to			  = array($user_email);	
		foreach($group_exp as $emp)
		{
			array_push($to,$emp);
		}

		$filter[0]['field'] = "isinfo";
		$filter[0]['data']  = array("comparison"	=> "eq",
								   "type"		=> "numeric",
								   "value"		=> 13);
		
		// $filter[1]['field'] = "areacode";
		// $filter[1]['data']  = array("comparison"	=> "eq",
								   // "type"			=> "string",
								   // "value"			=> $this->input->post('areaval'));
								   
		$datatemplate = $this->b_model->get_all_data('general_info', $filter , 2 , 0 , '');
		
		$email_temp   = $datatemplate[0]->email;
		$email_exp	  = explode(';',$email_temp);

		foreach($email_exp as $emp)
		{
			array_push($to,$emp);
		}

		$subject 	= $datatemplate[0]->subject;
		$pesan 		= $datatemplate[0]->template;		
		
		$datapost = json_decode($datass);
		$setun = array();	
		
		$n=0;		
		$m=0;		
		$path = substr(BASEPATH,0,-7).'asset/xls/';
		$topath = substr(BASEPATH,0,-7).'asset/tmp/';	
		$objReader = PHPExcel_IOFactory::createReader('Excel5');
		$objPHPExcel = $objReader->load($path.'reject_data_kortak_nonamr.xls');
		$baseRow = 4;		
		$baseRow2 = 11;		
		$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Reject Data Koreksi NON AMR' );	
		$objPHPExcel->getActiveSheet()->setCellValue('A2', 'Data Koreksi NON AMR' );	
		$objPHPExcel->getActiveSheet()->setCellValue('A8', 'Detail Data Koreksi NON AMR' );	
		
		foreach ($datapost as $items)
		{
			$row = $baseRow + $n;
			$wherepeng  = array('id_pel' => $items->customercode, 'tanggal' => $items->priodeend);
			$codetax 	= array('codetaxation' => $items->codetaxation, 
								'jenisba <>' => 9
								) ;	
			
			$wheretax 	= array('codetaxation' => $items->codetaxation);
			$where_tax = array('rowid' => $items->rowid);
			$fieldsval = "";
			foreach ($items->field as $r)
			{
				$fieldsval .=$r.",";
			}
			$fieldsval = substr($fieldsval,0,-1);
			$datainfo = array (	
				'reffidtaxation' => $items->rowid,
				'category' => $items->kategori,
				'fields' => $fieldsval,
				'keterangan' => $items->keterangan,
				'creperson' => $this->session->userdata('username'),				
				'credate' => dateTonum(date('Y-m-d H:i:s'))			
			);
			$ambil = array('streamid'	=> $items->streamid,'reffidtaxation'=> $items->rowid,'sbu' => $items->sbuname, 'area' => $items->areaname, 'id_pel' => $items->customercode, 'namapel' => $items->customername, 'tanggal' => $items->priodeend,'volume' => $items->volcorrected,'noref' => $items->noref, 'priodestartori' => $items->priodestartori , 'priodeendori' => $items->priodeendori,
			'priodestart' => $items->priodestart, 'priodeend' => $items->priodeend 
			);
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)							  
							  ->setCellValue('B'.$row, $items->sbuname)
							  ->setCellValue('C'.$row, $items->areaname)
							  ->setCellValue('D'.$row, "'".$items->customercode)
							  ->setCellValue('E'.$row, $items->customername)
							  ->setCellValue('F'.$row, $items->streamid)
							  ->setCellValue('G'.$row, $items->priodestart)
							  ->setCellValue('H'.$row, $items->priodeend)
							  ->setCellValue('I'.$row, $items->volcorrected)
							  ->setCellValue('J'.$row, $items->description)
							  ->setCellValue('K'.$row, date('Y-m-d H:i:s'))
							  ->setCellValue('L'.$row, $items->kategori)
							  ->setCellValue('M'.$row, $fieldsval)
							  ->setCellValue('N'.$row, $items->keterangan)
							  ->setCellValue('O'.$row, $this->session->userdata('username'));			
			array_push($setun, $datanya);
			$n++;			
		}	

		$querry = " getkoreksi_avr('', '', '".$ambil['priodestart']."', '".$ambil['priodeend']."', '', '', '".$ambil['streamid']."','', '','', '".$wheretax['codetaxation']."', 0)";		
		$entries        = $this->b_model->get_all_datafunc($querry, array() );		
		$querrypeng = " getvaldy_avr_pengukuran('','','".$ambil['priodestart']."','".$ambil['priodeend']."','','','".$ambil['streamid']."','".$ambil['id_pel']."','',2,2) ";
		$datapeng 		=  $this->b_model->get_all_datafunc($querrypeng, array() );		
		//die();
		foreach ($entries as $intex)
		{
			$row = $baseRow2 + $m;	
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $m+1)							  
							  ->setCellValue('B'.$row, $intex->description)
							  ->setCellValue('C'.$row, "'".$intex->meterserialno)
							  ->setCellValue('D'.$row, $intex->badate)
							  ->setCellValue('E'.$row, $intex->banumber)
							  ->setCellValue('F'.$row, $intex->uncorrectedstart)
							  ->setCellValue('G'.$row, $intex->uncorrectedend)
							  ->setCellValue('H'.$row, $intex->correctedstart)
							  ->setCellValue('I'.$row, $intex->correctedend)
							  ->setCellValue('J'.$row, $intex->volcorrected)
							  ->setCellValue('K'.$row, $intex->pressure)
							  ->setCellValue('L'.$row, $intex->temperature)
							  ->setCellValue('M'.$row, $intex->co2)
							  ->setCellValue('N'.$row, $intex->n2)
							  ->setCellValue('O'.$row, $intex->sg)
							  ->setCellValue('P'.$row, $intex->remarks);			
			
			$m++;
		}		
		
		if (!empty($datapeng)) {		
		
			foreach ($datapeng as $ims)
			{
				$datpengnya = array(
					'penyaluran_amr_dailypenyaluranid' => '99',
					'reffidamrbridgedaily' 	=> $ims->reffidamrbridgedaily,
					'reffamralertid' 		=> $ims->reffamralertid,
					'sbu' 		=> $ims->sbu,
					'area'		=> $ims->areacode,
					'streamid' 	=> $ims->stream,
					'idpel' => $ims->id_pel,
					'pelname' => $ims->namapel,
					'fdatetime' => $ims->fdatetime,			
					'fdate' => $ims->fdate,
					'fmonth' => $ims->fmonth,
					'fyear' => $ims->fyear,				
					'fdvm' =>$ims->fdvm,
					'fdvc' =>$ims->fdvc,
					'fvm' =>$ims->fvm,
					'fvc' =>$ims->fvc,				
					'fp' =>$ims->fp,
					'ft' =>$ims->ft,
					'reffidtaxation' => $ambil['reffidtaxation'],
					'status' => 4,
					'delflag' => 1,
					'creperson' => $this->session->userdata('username'),				
					'credate' => dateTonum(date('Y-m-d H:i:s')),				
					'updcnt' => 1,
					'isapproval' => 0,
					'typeapproved' => $ims->stat
				);				
			
			}
			// $datareject = $this->b_model->insert_data('h_penyaluran_amr_daily', $datpengnya);
			$sial = 'padh'.$datareject;
			$datainfo['reffidpengukuran'] = $sial; 
		} 		 
		
		// $this->b_model->insert_data('reject_info', $datainfo);	
		$c_datanya = array(				
			'delflag' => 1,									
			'updperson' => $this->session->userdata('username'),				
			'isapproval' => 4
		);
		// $this->b_model->update_all('taxation_avr', $where_tax, $c_datanya);		
		
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		$file = "".$topath."Reject_Data_Koreksi_Non_AMR". $sial. ".xls";
		$objWriter->save($file);

		// $this->send_emailmultiaddress( $to, $subject, $pesan, $file );
		// delete_files( $topath );
		$dadum['success'] = true;
		$dadum['data'] = $setun;	
	    echo json_encode($dadum);
	
	}
	
}