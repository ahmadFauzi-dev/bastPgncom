Ext.define('simpel.surat_masuk.griddisposisiap' ,{
	extend: 'Ext.grid.Panel',
	initComponent	: function()
	{
		var dataselect;
		var pageId = Init.idmenu;
		var msclass = Ext.create('master.global.geteventmenu'); 
		
		vtable = "fn_addanggotadispo('"+Init.dispoid+"','"+sess_reffjabatan+"')";
		var model = msclass.getmodel(vtable);
		var columns = msclass.getcolumn(vtable);
		//var winss;
		var filter = [];
		var store =  msclass.getstore(model,vtable,filter);

		store.getProxy().extraParams = {
							view :vtable,
							limit : "All",
							"filter[0][field]" : "parent",
							"filter[0][data][type]" : "string",
							"filter[0][data][comparison]" : "eq",
							"filter[0][data][value]" : sess_reffjabatan
						};
		store.load();
		
		var storejabatan =  msclass.getstore(model,'v_jabatan',filter);
		
		storejabatan.getProxy().extraParams = {
							view :'v_jabatan',
							limit : "All"
						};
		storejabatan.load();

		var coldisplay = columns;
					//coldisplay[0].hidden = true;//row_id
					coldisplay[1] = { 	
								text : 'Name',
								width:250,
								dataIndex	: columns[1].dataIndex,
								renderer : function(value, metaData, record){
									var id = storejabatan.findRecord('id', value, 0 , false, false, true);
									return id != null ? id.get('name') : record.get('name');
									
								},
								editor		: {
									xtype			: 'combobox',
									name			: columns[1].dataIndex,
									store				: storejabatan,
									displayField	: 'name',
									queryMode	: 'local',
									valueField		: 'id',
									listeners: {
										select: function(cmb, record, index){
												var nama_divisi = record[0].data.nama_divisi;
												Ext.getCmp('nama_divisids'+pageId).setValue(nama_divisi);
										}
									}	
								}
					};
					coldisplay[2].hidden = true;
					coldisplay[3].hidden = true;
					coldisplay[4].hidden = true;
					coldisplay[5].hidden = true;
					coldisplay[6].hidden = true;
					coldisplay[7].hidden = true;
					coldisplay[8].hidden = true;
					coldisplay[9].hidden = true;
					coldisplay[10].hidden = true;
					coldisplay[11].hidden = true;
					coldisplay[12].hidden = true;
					coldisplay[13].hidden = true;
					coldisplay[14].hidden = true;
					coldisplay[15] = {
						text : 'Nama Divisi',
						width:100,
						dataIndex	: coldisplay[15].dataIndex,
						editor		: {
							xtype : 'textfield',
							name : coldisplay[15].dataIndex,
							id : 'nama_divisiap'+pageId,
							readonly : true
						}
					};
					coldisplay[16].hidden = true;
					coldisplay[17].hidden = true;
					coldisplay[18].hidden = true;
					
				var editing = Ext.create('Ext.grid.plugin.RowEditing', {
				  clicksToEdit: 2,
				  listeners :
					{					
						'edit' : function (editor,e) {
							 // console.log("asd");
							var grid = e.grid;
							var record = e.record;					 
							var recordData = record.data;
						}
					}
				});	
					
		Ext.apply(this, {
				//title	: 'Email Template',
				store		: store,
				multiSelect	: true,
				selType		: 'checkboxmodel',
				fit		: true,
				layout : 'fit',
				height : 200,
				id			: 'griddisposisiap',
				plugins		: editing,	
				dockedItems	: [
					{
						xtype: 'toolbar',
						items	: [
						{
							text	: 'Add',
							iconCls	: 'add',
							id : 'addgdispo',
							xtype	: 'button',
							handler	: function()
							{
								var r = {
										rowid : '',
										name : '',
								}
								store.insert(0, r);								
							}
						},
						{
								text	: 'Delete',
								iconCls	: 'bin',
								id : 'deletegdispo',
								xtype	: 'button',
								handler: function () {
									var grid = this.up('grid');
									if (grid) {
										var sm = grid.getSelectionModel();
										var rs = sm.getSelection();
										if (!rs.length) {
											Ext.Msg.alert('Info', 'No Records Selected');
											return;
										}
										grid.store.remove(rs[0]);
										
									}
								}
						}]
					}
				],
				columns		: columns,
				listeners	: {
					itemdblclick:function(model, record, index, eOpts)
					{
						//record.data.rowid;
						//console.log(record.data);
					}
				}
			});
			this.callParent(arguments);
	}
});