Ext.define('analisa.bulk.view.gridlogreject' ,{
    extend: 'Ext.grid.Panel',
	id    : Init.idmenu+'gridlogreject',
    initComponent: function() {
	var filter 		= [];
	var data;
	var msclass 	= Ext.create('master.global.geteventmenu');
	var model 		= msclass.getmodel('v_logeventbulk');
	model.push('field');
	model.push('kategori');
	model.push('keterangan');
	model.push('selectopts');
	//var store 			=  msclass.getstore(model,'v_logeventbulk',filter);
	//store.groupField 	= 'tanggal_pengukuran';
	
	var store	= Ext.create('Ext.data.JsonStore',{
			fields 		: model,
			groupField	: 'penyaluranrowid',
			proxy: {
				type: 'pgascomProxy',
				extraParams : {
					view 	: 'v_logeventbulk'
				},
				url: base_url+'admin/master/getloaddata',
				reader: {
					type: 'json',
					root: 'data'
				}
			}
	});
	
	var groupingFeature = Ext.create('Ext.grid.feature.Grouping',{
	        groupHeaderTpl:'{[values.rows[0].data.tanggal_pengukuran]} / {[values.rows[0].data.nama_station]}'
	}); 
	store.load();
	
		
		Ext.apply(this, {
			store		: store,
			autoScroll	: true,
			id    		:  ''+Init.idmenu+'gridreject',
			loadMask: true, 
			tbar		: [
			{
				text	: 'Export',
				iconCls	: 'page_white_excel',
				handler	: function()
				{
					msclass.exportdata(''+Init.idmenu+'gridreject');
				}
			}],
			features: [groupingFeature],	
			columns		: [
			Ext.create('Ext.grid.RowNumberer',{header:'No'}),
			{
				"text"	: "Station Name",
				locked   : true,
				//flex	: 1,
				"dataIndex" : "nama_station"
			},
			{
				"text"		: "Tanggal Pengukuran",
				xtype		: 'datecolumn',
				locked   : true,
				//flex	: 1,
				"dataIndex"	: "tanggal_pengukuran",
				format		: 'Y-m-d'
			},
			{
				text	: 'Volume <br /> (MSCF)',
				align	: 'center',
				//flex	: 1,
				xtype	: 'numbercolumn',
				format	: '0.00000000000000',
				dataIndex	: 'volume'
			},
			{
				text	: 'Energy <br /> (MMBTU)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'energy'
			},
			{
				text	: 'Counter Volume <br /> (MSCF)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'counter_volume'
				
			},
			{
				text	: 'Counter Energy <br /> (MMBTU)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'counter_energy'
			},
			{
				text	: 'GHV <br /> (BTU/SCF)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'ghv'
			},
			{
				text	: 'Tekanan IN <br /> (PSIG)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'pressureinlet'
			},
			{
				text	: 'Tekanan OUT <br /> (PSIG)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'pressureoutlet'
			},
			{
				text	: 'Temperature',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'temperature'
			},
			{
				text	: 'EM',
				columns	: [{
					text	: 'Tanggal',
					dataIndex	: 'create_date'
				},
				{
					text	: 'By',
					dataIndex	: 'creperson'
				},
				{
					text	: 'Status Data',
					dataIndex	: 'status'
				}]
				//dataIndex	: 'create_date'
			},
			{
				text	: 'SIPGAS Update',
				columns	: [{
					text	: 'Tanggal',
					dataIndex	: 'last_updatedate_sipgas'
				},{
					text	: 'By',
					dataIndex	: 'last_updateby_sipgas'
				}]
			}],
			
			bbar: Ext.create('Ext.PagingToolbar', {
				pageSize: 10,
				store: store,
				displayInfo: true
			}),
			listeners	: 
			{
				beforeitemcontextmenu: function(view, record, item, index, e)
				{
					e.stopEvent();
					data = record.data;
					medugridkelengkapan.showAt(e.getXY());
				},
				itemclick	: function(view, record, item, index, e, eOpts)
				{
					data = record.data;
				},
				select: function (model, record, index, eOpts) {
					record.set('selectopts',true);
				},
				deselect: function (view, record, item, index, e, eOpts) {
					//console.log('deselect fired'+index);
					//record.data.selectopts = false;
					record.set('selectopts',false);
				}
			}
		});

        this.callParent(arguments);
    }
});