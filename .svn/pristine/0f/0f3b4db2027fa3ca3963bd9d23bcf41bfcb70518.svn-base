Ext.define('analisa.nonamr.view.gridpenyfinalnonamr' ,{
	extend: 'Ext.panel.Panel',    
	initComponent	: function()
	{
		
		var gridrejecto = Ext.create('analisa.view.rejecto');	
		var msclass = Ext.create('master.global.geteventmenu'); 
		var event = Ext.decode(msclass.getevent(Init.idmenu));
		
		var d = new Date();
		var m = (d.getMonth()+1).toString();
		if (m.length < 2 ) { m = '0'+m;}
		var f = d.getFullYear()+'-'+m+'-'+d.getDate();	
		
		var queryy = " getpenyaluranfinal_avr('', '', '"+f+"', '"+f+"', '', '', '1,2', '', '', 2, 2)";
		var queryyanomali = " getalert_avr('AVR29189',2) ";
		
		var modelGridnonamrDaily = msclass.getmodel(queryy);
		modelGridnonamrDaily.push({name : 'selectopts', type:'boolean'});
		var modelValidateDetail = msclass.getmodel(queryyanomali);
		var columnss 	 = msclass.getcolumngrid('gridPenyfinalnonamr', queryy);		
		var columnsdetail 	 = msclass.getcolumngrid('gridDetailAnomali',queryyanomali);		
		var filters  = [{
			"filter[0][field]" : "isapproval",
			"filter[0][data][type]" : "numeric",			
			"filter[0][data][comparison]" : "eq",			
			"filter[0][data][value]" : 1,
		}];		
		var filter 		 = [];		
		var storeGridPenyaluranfinal = msclass.getstore(modelGridnonamrDaily,queryy,filters);
		var storeGridAnomali = msclass.getstore(modelValidateDetail,queryyanomali,filter);
		
		// storeGridValidate.load();
		
		var gridDetailAnomali = Ext.create('Ext.grid.Panel',{
			store	: storeGridAnomali,
			loadMask: true, 
			id		: 'gridDetailAnomali',		
			columns		: columnsdetail,
			viewConfig: {
				listeners: {
					refresh: function(dataview) {
						Ext.each(dataview.panel.columns, function(column) {
							if (column.autoSizeColumn === true)
								column.autoSize();
						})
					}
				}
			}
		
		});	
		
		columnss[1].renderer = function(value, metaData, record, rowIdx, colIdx, store, view){					
					var color = '';
					if(record.get('status_alert') == "2")
					{
						if(record.get('isapproval') == "2") 
						{
							color = base_url+'asset/ico/agt_action_fail.png';
						} else 
						{
							color = base_url+'asset/ico/green_indicator.ico';
						}
						
					}else if(record.get('status_alert') == "1")
					{
						if(record.get('isapproval') == "2") 
						{
							color = base_url+'asset/ico/agt_action_fail.png';
						} else 
						{
							color = base_url+'asset/ico/yellow_green_indicator.ico';
						}
						
					}else if(record.get('status_alert') == "0")
					{
						
						if(record.get('isapproval') == "2") 
						{
							color = base_url+'asset/ico/agt_action_fail.png';
						} else 
						{
							color = base_url+'asset/ico/red_green_indicator.ico';
						}						
					} 
					return '<div><img src='+color+' width="16px" height="16px"></div>';					
				};
		
		var gridDataPenyaluranfinal = Ext.create('Ext.grid.Panel',
		{	
			loadMask: true, 
			multiSelect	: true,
			selType		: 'checkboxmodel',
			selModel: {
					injectCheckbox: 0,
					pruneRemoved: false,
					showHeaderCheckbox: false
				},		
			store		: storeGridPenyaluranfinal,
			id			: 'gridPenyfinalnonamr',		
			dockedItems: [
		{
			xtype: 'toolbar',
			items: [
				{
					text	: 'Export',
					xtype : 'button',
					iconCls	: 'page_white_excel',
					hidden	: event.p_export,
					handler	: function()
					{
						window.location.href = base_url+'analisa/nonamr/toexcelfinal?filter='+Ext.encode(Init.specialparams);
					}				
				},
				{
					text : 'Calculate',
					iconCls : 'calculator_link',
					hidden	: event.p_calculate,
					xtype : 'button',
					handler	: function()
					{
						// var items = [];
						// storeGridPenyaluranfinal.each(function(record){								
								// if (record.data.selectopts == true)
								// {
									// items.push(record.data);									
								// }
							// });
						var url = base_url+'analisa/nonamr/recalculate';
						var params = storeGridPenyaluranfinal.proxy.extraParams;
						params.offset = storeGridPenyaluranfinal.currentPage;
						params.limit  = storeGridPenyaluranfinal.pageSize;
						// console.log(params);						
						Ext.Ajax.request({	 
							url: url,
							method: 'POST',
							params: params,
							success: function(response,requst){
								Ext.Msg.alert('Success','Transaksi Sukses');
								storeGridApprovalamr.reload();
							},
							failure:function(response,requst)
							{
								Ext.Msg.alert('Fail !','Input Data Entry Gagal');
								Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText + "");
								return false;
							}
						});
					}
				},
				{
					text : 'Unapproved',
					iconCls : 'error_go',
					id		: 'unapproved_id',
					disabled: false,
					xtype : 'button',
					hidden	: event.p_unapproved,
					handler	: function()
					{
					Ext.Msg.confirm('Warning!', 'Anda Yakin..?', function(btn, text){
					
					if (btn == 'yes'){						
							var items = [];
							var count = 0;
								var areaold = "";
								var areaval = "";
							
							Ext.getCmp('unapproved_id').setDisabled(true);
							storeGridPenyaluranfinal.each(function(record){
								
								if (record.data.selectopts == true)
								{
									items.push(record.data);
									if(areaold == "")
									{
										areaold = record.data.areacode;
									}
									
									if(areaold != record.data.areacode)
									{
										count = count+1;
									}
									
									areaval = record.data.areacode;
								}
							});
						//console.log(items);		
						
							if(count == 0)
								{
									Ext.Ajax.request({ 
										url			: base_url+'analisa/nonamr/updateunapproved',
										method: 'POST',
										params:{
											data : Ext.encode(items),
											areaval	 : areaval
										},
										success: function(response,requst){	
												
											Ext.Msg.alert('Sukses','Data Telah di Unapproved');
											storeGridPenyaluranfinal.removeAll();								
											storeGridPenyaluranfinal.reload();
										},
										failure: function(response,requst)
										{
											Ext.Msg.alert('Fail !','Input Data Gagal');								
										}										
									});
								}else
								{
									Ext.Msg.show({
										title	: 'Error',
										msg		: "Area yang di pilih lebih dari satu",
										buttons	: Ext.Msg.OK,
										icon	: Ext.Msg.ERROR,
									});
								}
							
					
					} else {
											  
					}							
					});
						
					}
					
				},
				'->',
				{
					text	: 'Unapproved'
				},
				{
					xtype	: 'checkboxfield',
					handler	: function(field, value)
					{
						//console.log(value);
						
						var a = storeGridPenyaluranfinal.getProxy().extraParams;
						console.log(a);
						if(value == false)
						{	
							storeGridPenyaluranfinal.getProxy().extraParams = {
								view : a.view,
								isapproval : false,
								"filter[0][field]" : "isapproval",
								"filter[0][data][type]" : "numeric",
								"filter[0][data][comparison]" : "eq",
								"filter[0][data][value]" :1
							};
							
							
						}else
						{
							
							storeGridPenyaluranfinal.getProxy().extraParams = {
								view : a.view,
								isapproval : true,
								"filter[0][field]" : "isapproval",
								"filter[11][data][type]" : "list",
								"filter[0][data][value]" 	:"1,2"
							};
							
						}
						
						storeGridPenyaluranfinal.loadPage(1);
					}
				}				
				]
		},
		{
			xtype: 'pagingtoolbar',
			dock: 'bottom',
			store: storeGridPenyaluranfinal,
			displayInfo: true,
			plugins : [Ext.create('Ext.ux.PagingToolbarResizer')]
		}],			
			columns		: columnss,
			viewConfig: {
				listeners: {
					refresh: function(dataview) {
						Ext.each(dataview.panel.columns, function(column) {
							if (column.autoSizeColumn === true)
								column.autoSize();
						})
					}
				}
			},
			listeners	: 
			{
				
			/* selectionchange: function (sm, records, options) {
				var rec = records[0];
				console.log('selectionchange fired '+ rec);
			}, 
			beforeselect: function(model, record, index, eOpts) {
				if (record.data.stat == 0) {//replace this with your logic.
					return false;
				}
			},*/
			itemclick : function(model, record, index, eOpts)
			{
				// darecord = record.data ;
				
					// var storeanomali = Ext.getCmp('gridDetailAnomali').getStore();
					// storeanomali.getProxy().extraParams = {
										// view : " getalert_avr('"+darecord.valdy_avrrowid+"', 2)"	
										// };	
					// storeanomali.loadPage(1);
				// record.set('selectopts',true);
				
			},
			select: function (model, record, index, eOpts) {
				darecord = record.data ;				
				var storeanomali = Ext.getCmp('gridDetailAnomali').getStore();
				storeanomali.getProxy().extraParams = {
									view : " getalert_avr('"+darecord.valdy_avrrowid+"', 2)"	
									};	
				storeanomali.loadPage(1);	
				record.set('selectopts',true);				
			},
			deselect: function (view, record, item, index, e, eOpts) {
				//console.log('deselect fired'+index);
				//record.data.selectopts = false;
				record.set('selectopts',false);
			}
			 
		}		
			}); 		
		
		
		
		// storeGridDaily.load();
		Ext.apply(this,{
			title  		: 'Non AMR Penyaluran Final',			
			frame: true,			
			iconCls 	: 'application_view_gallery',
			layout: 'border',
			defaults: {
                collapsible: true,
                split: true,
                //bodyStyle: 'padding:5px'
            },
			items: [
				{
					xtype : 'panel',
					title : 'Data Penyaluran Final',
					frame	: true,
					region : 'center',
					layout: 'fit',
					collapsible: false,
					flex: 3,					
					// autoScroll : true,
					border: false,
					items: gridDataPenyaluranfinal
					
				},				
				{
					xtype : 'panel',
					autoScroll : true,
					region : 'south',
					frame	: true,
					border	: false,
					title : 'Anomali',
					layout: 'fit',					
					flex: 1,
					items : gridDetailAnomali
					// ,
					// tools: [
					// {
						// type:'gear',
						// tooltip: shide+' Detail',
						// callback: function() {
							// if (showDetailOK === 1 ){
								// showDetailOK = 0;
								// shide = 'Show';
								// console.log(showDetailOK + shide);
							// } else { 
								// showDetailOK = 1; 
								// shide = 'Hide';
								// console.log(showDetailOK + shide);
							// } 							
						// }
					
					// }]
				}
			]
		});
		this.callParent(arguments);
	}
});