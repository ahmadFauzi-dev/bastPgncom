Ext.define('analisa.view.gridamrhr' ,{
	extend: 'Ext.grid.Panel',
    
	initComponent	: function()
	{
		Ext.define('modelGridamrHr',{
			extend	: 'Ext.data.Model',
			fields	: ['id_pel','namapel','sbu','area','fdvm','fdvc','fp','ft','fvm','fvc','tanggal','stat','selisih_cm','selisih_un','stream','jam']
		});
	
		var storeGridamrHr = Ext.create('Ext.data.JsonStore',{
			model	: 'modelGridamrHr',
			storeId: 'amrHrStore',
			proxy: {
			type: 'pgascomProxy',
			//extraParams:{id_pel:'1'},
			url: base_url+'admin/findamrhr',
			pageParam: false, 
			startParam: false, 
			limitParam: false,
			reader: {
				type: 'json',
				root: 'data'
			}
		}
		});		
		
		Ext.apply(this,{
		layout  : 'fit',
		store		: storeGridamrHr,
		id			: 'gridaamrHr',		
		
		/* dockedItems: [
		{
			xtype: 'pagingtoolbar',
			dock: 'bottom',
			store: storeGridamrHr,
			displayInfo: true
		}],	 */	
		
		columns		: [
			{
				dataIndex	: 'stat',
				width		: 50,
				align	: 'center',
				renderer : function(value, metaData, record, rowIdx, colIdx, store, view){
					
					//metaData.tdAttr= 'data-qtip="'+message+'"';
					var color = '';
					if(record.get('stat') == "success")
					{
						 color = base_url+'asset/ico/green_indicator.ico';
					}else if(record.get('stat') == "warnig")
					{
						 color = base_url+'asset/ico/yellow_indicator.ico';
					}else
					{
						color = base_url+'asset/ico/red_indicator.ico';
					}
					return '<div><img src='+color+' width="20px" height="20px"></div>';
					
				}
			},
			{
				text	: 'Jam',
				width	: 40,
				align	: 'center',
				dataIndex	: 'jam'				
			},
			{
				text	: 'RD',
				width	: 100,
				align	: 'center',
				dataIndex	: 'sbu'
			},
			{
				text	: 'Area',
				width	: 100,
				align	: 'center',
				dataIndex	: 'area'
			},		
			
			{
				text	: 'No Reff',
				width	: 100,
				align	: 'center',
				dataIndex	: 'id_pel'
			},
			{
				text	: 'Nama Pelanggan',
				width	: 100,
				align	: 'center',
				dataIndex	: 'namapel'
			},
			
			{
				text	: 'Tanggal',
				width		: 150,
				align	: 'center',
				dataIndex	: 'tanggal'
			},
			{
				text	: 'Counter Meter',
				align	: 'center',
				columns  : [{
					text : 'Awal',
					align	: 'center',
					dataIndex	: 'fvc',
					type	: 'float'
				},
				{
					text : 'Akhir',
					align	: 'center',
					dataIndex	: 'selisih_cm',
					type	: 'float'
				}
				]				
			},
			{
				text	: 'Selisih CM',
				align	: 'center',
				type	: 'float',
				dataIndex	: 'fdvc'
			},

			
			{
				text	: 'Counter Uncorected',
				align	: 'center',
				columns  : [{
					text : 'Awal',
					align	: 'center',
					type	: 'float',
					dataIndex	: 'fvm'
				},
				{
					text : 'Akhir',
					align	: 'center',
					type	: 'float',
					dataIndex	: 'selisih_un'
				}
				]				
			},
			{
				text	: 'Selisih UN',
				align	: 'center',
				type	: 'float',
				dataIndex	: 'fdvm'
			},	
			{
				text	: 'Tekanan',
				align	: 'center',
				type	: 'float',
				dataIndex	: 'fp'
			},
			{
				text	: 'Temperature',
				align	: 'center',
				type	: 'float',
				dataIndex	: 'ft'
			},
			{
				text	: 'Stream',
				align	: 'center',
				type	: 'float',
				dataIndex	: 'stream'
			}
			
		]
		});
		this.callParent(arguments);
	}
})