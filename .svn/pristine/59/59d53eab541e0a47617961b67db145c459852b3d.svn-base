Ext.define('analisa.offtake.view.gridvalidtaksasi' ,{
    extend			: 'Ext.grid.Panel',
	id    			: Init.idmenu+'gridofftaketaksasi',
    initComponent	: function() {
	var filter 		= [];
	var data;
	var winuploaddok;
	var msclass 			= Ext.create('master.global.geteventmenu');
	var model 				= msclass.getmodel('v_penyaluranstationdaily');
	Init.storetaksasi 		= msclass.getstore(model,'v_penyaluranstationdaily',filter);
	var formuploaddok 		= Ext.create('analisa.bulk.view.formuploaddok');
	//var store 		=  Init.storetaksasi;
	//Init.storetaksasi.load();
	model.push('selectopts');
	//console.log(model);
	
	Init.storetaksasi.getProxy().extraParams = {
		view : "v_penyaluranstationdaily",
			"filter[0][field]" : "statusapproval",
			"filter[0][data][type]" : "boolean",
			"filter[0][data][comparison]" : "eq",
			"filter[0][data][value]" :'Taksasi',
			
			"filter[1][field]" : "nama_station",
			"filter[1][data][type]" : "boolean",
			"filter[1][data][comparison]" : "eq",
			"filter[1][data][value]" :'NOT NULL',
			
	};	
	//storemstation.reload();
	Init.storetaksasi.load();
	
	/*
	Ext.define('mstationconfigdetail',{
		extend	: 'Ext.data.Model',
		fields	: ['tbl_station_id','tanggalpengukuran','volume','energy','ghv','pin','pout','temperature','counter_volume','counter_energy','tanggal','stat','stationname','error','tglpenyalurandate']
	});
	*/
	
	
	var editing = Ext.create('Ext.grid.plugin.RowEditing', {
		  clicksToEdit: 2,
		  listeners :
			{					
				'edit' : function (editor,e) {
						 
						 var grid 	= e.grid;
						 var record = e.record;
						 
						var recordData = record.data; 
						Ext.Ajax.request({ 
							
							url: base_url+'admin/insertdatamanualbulk',
							method: 'POST',
							params: recordData,
							success: function(response,requst){
								//workflowGrid.load();
								//console.log(response.text);
								//alert('test');
								storegridstationconfigdetail.reload();
							},
							failure:function(response,requst)
							{
								Ext.Msg.alert('Fail !','Input Data Entry Gagal');
								Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText + "");
							}
										
						})
							
				}
			}
		});
		
		var filterconfig = {ftype	: 'filters',
			filters	: [
				{
					type	: 'date',
					dateFormat	: 'Y-m-d',
					dataIndex	: 'tglpenyalurandate'
				}
			]
		};
		
		Ext.apply(this, {
			store		: Init.storetaksasi,
			title		: 'Grid Penyaluran',
			//height		: 200,
			multiSelect	: true,
			selType		: 'checkboxmodel',
			autoScroll	: true,
			id    		:  ''+Init.idmenu+'gridofftaketaksasi',
			tbar		: [
			{
				text	: 'Approve',
				iconCls	: 'accept',
				handler	: function()
				{
					Init.storetaksasi.each(function(record){
					  
					  if(record.data.selectopts == true)
					  {
							msclass.savedata(record.data,base_url+'admin/inserttofin');	
							/*
							Ext.Ajax.request({	 
								
								url: base_url+'admin/inserttofin',
								method: 'POST',
								params: record.data,
								success: function(response,requst){
									
									//storegridstationconfigdetail.reload();
								},
								failure:function(response,requst)
								{
									Ext.Msg.alert('Fail !','Input Data Entry Gagal');
									Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText + "");
								}
											
							});
							*/
							
					  }
					  
					});
					
					Init.storetaksasi.load();
					
					 Ext.MessageBox.alert('Notification', 'Approved');
				}
			},
			'-'
			,
			{
				text	: 'Reject',
				iconCls : 'cancel',
				handler	: function()
				{
					msclass.rejectbulk(''+Init.idmenu+'gridvalidtaksasi');
				}
			},
			'-'
			,
			{
				text	: 'Save',
				iconCls	: 'database_save',
				handler	: function()
				{
					var stores = Init.storetaksasi;
					var datasubmit = [];
					stores.each(function(record){
						//console.log(record.data);
						datasubmit.push(record.data);
					}); 
					var data = {
						data	: Ext.encode(datasubmit)
					}
					msclass.savedata(data,base_url+'admin/savetaxbulk');
					Init.storetaksasi.reload();
					
				}
			},
			'-',
			{
				text	: 'Upload Dokumen',
				iconCls	: 'application_get',
				handler	: function()
				{
					if(!winuploaddok)
					{
						winuploaddok = Ext.widget('window', {
									title		: "Upload Dokumen",
									closeAction	: 'hide',
									width		: 400,
									//height		: 260,
									autoScroll	:true,
									id			: ''+Init.idmenu+'winimp',
									resizable	: true,
									modal		: true,
									bodyPadding	: 5,
									items		: formuploaddok
						});
					}
					
					winuploaddok.show();
					//console.log("OK");
				}
			}],
			columns		: [
			Ext.create('Ext.grid.RowNumberer',{header:'No'}),
			{
				dataIndex	: 'error',
				width		: 20,
				locked   : true,
				renderer : function(value, metaData, record, rowIdx, colIdx, store, view){
					
					//metaData.tdAttr= 'data-qtip="'+message+'"';
					var color = '';
					if(record.get('statusdata') == "1")
					{
						color = base_url+'asset/ico/green_indicator.ico';
					}else if(record.get('statusdata') == "0")
					{
						color = base_url+'asset/ico/red_indicator.ico';
					}
					//color = base_url+'asset/ico/green_indicator.ico';
					return '<div><img src='+color+' width="15px" height="15px"></div>';
					
				}
			},
			{
				"text"	: "Station Name",
				locked   : true,
				"dataIndex" : "nama_station"
			},
			{
				"text"		: "Tanggal Pengukuran",
				xtype		: 'datecolumn',
				locked   : true,
				//flex	: 1,
				"dataIndex"	: "tanggal_pengukuran",
				format		: 'Y-m-d'
			},
			{
				text	: 'Volume',
				align	: 'center',
				//flex	: 1,
				xtype	: 'numbercolumn',
				format	: '0.00000000000000',
				dataIndex	: 'volume',
				
				editor		: 
				{	
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					format	: '0.00000000000000',
					name	: 'volume'
				}
			},
			{
				text	: 'Energy <br /> BBTUD',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'energy',
				
				editor		: 
				{
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'energy'
				}
			},
			{
				text	: 'Counter Volume <br /> (MMSCF)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'counter_volume',
				
				editor		: {
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'counter_volume'
				}
				
			},
			{
				text	: 'Counter Energy <br /> (BBTU)',
				align	: 'center',
				//flex	: 1,
				editor	:
				{
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'counter_energy'
				},
				dataIndex	: 'counter_energy',
				
			},
			{
				text	: 'GHV <br /> (BTU/SCF)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'ghv',
				editor		: {
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'ghv'
				}
				
			},
			{
				text	: 'Tekanan IN <br /> (PSIG)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'pressureinlet',
				editor		: {
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'pressureinlet'
				}
			},
			{
				text	: 'Tekanan OUT <br /> (PSIG)',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'pressureoutlet',
				editor		: {
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'pressureoutlet'
				}
			},
			{
				text	: 'Temperature',
				align	: 'center',
				//flex	: 1,
				dataIndex	: 'temperature',
				editor		: {
					xtype	: 'numberfield',
					allowDecimals: true,
					decimalPrecision: 14,
					name	: 'temperature'
				}
			},
			{
				text	: 'Keterangan',
				align	: 'center',
				width	: 220,
				editor	: {
					xtype: 'textareafield',
					maxLength  : 165,
					height	   : 100,
					width      : 400,	
					grow: true,
				}
			}],
			features	: [filterconfig],
			plugins	: editing,
			bbar: Ext.create('Ext.PagingToolbar', {
				pageSize: 10,
				store: Init.storetaksasi,
				displayInfo: true
			}),
			listeners	: 
			{
				beforeitemcontextmenu: function(view, record, item, index, e)
				{
					e.stopEvent();
					data = record.data;
					medugridkelengkapan.showAt(e.getXY());
				},
				itemclick	: function(view, record, item, index, e, eOpts)
				{
					data = record.data;
				},
				select: function (model, record, index, eOpts) {
					//console.log(record.data);
					//record.data.selectopts = true;
					record.set('selectopts',true);
				},
				deselect: function (view, record, item, index, e, eOpts) {
					//console.log('deselect fired'+index);
					//record.data.selectopts = false;
					record.set('selectopts',false);
				}
			}
		});

        this.callParent(arguments);
    }
});