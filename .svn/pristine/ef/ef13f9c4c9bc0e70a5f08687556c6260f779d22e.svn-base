Ext.define('monitoring.view.formareavalidasi' ,{
		extend: 'Ext.form.Panel',
		// alias : 'widget.formvalidamr',
		initComponent: function() {	
			
			Init.storeSBU.load();
			Init.storeArea.load();
			
			Ext.apply(this, {
				frame		: false,
				border		: false,
				layout		: 'form',
				frame  		: false,
				method		: 'POST',
				// url			: base_url+'admin/findamr',
				bodyPadding: '5 5 0',
				fieldDefaults: {
					labelAlign: 'left',
					anchor: '35%'
				},
				id			: 'formAreaValidasi',
				items		: 
				[			
					{
						xtype: 'monthfield',
						submitFormat: 'Y-m',
						name: 'startt',
						fieldLabel: 'Bulan',
						format: 'F, Y',
						id : 'bulandatanya'
					},
					{
						xtype		: 'combobox',
						fieldLabel	: 'RD',						
						name		: 'sbu',
						displayField: 'description',
						valueField: 'description',
						queryMode: 'local',									
						store: Init.storeSBU,
						listeners : {
							select: function(combo) 
							{
								 var values = combo.getValue(),
								 record = combo.findRecordByValue(values);
								 Init.storeArea.reload({ params : { sbu : record.data.rowid }});
								
							 }
						 }

						
					}	
				],
				buttons		: [{
							text	: 'Search',
							iconCls : 'magnifier',
							handler	: function()
							{
								
								var days = ["","Januari","Februari","Maret","April","Mei","Juni","Juli","Agustus","September","Oktober","Nopember","Desember"];
								var findform = this.up('form').getForm();
								var oksparams = findform.getValues();
								//var storekelamr = Ext.getCmp('grid_areavalidasi').getStore();
								var fmonth = oksparams.startt.substr(5, 2);
								var fyear = oksparams.startt.substr(0, 4);
								var d = new Date(parseInt(fyear),parseInt(fmonth)-1);
								console.log(oksparams.startt+'-01');
								var start_date = oksparams.startt+'-01';
								var end_date = oksparams.startt+'-31';
								var msclass = Ext.create('master.global.geteventmenu'); 
								var tiketnumber = msclass.getticket();
								var firstItem = Ext.getCmp('panelprovisionalvalidasi').items.first();
								Ext.getCmp('panelprovisionalvalidasi').remove(firstItem,true);
								
								var start_p = new Date(start_date);
								start_p.setMonth(start_p.getMonth() - 1);
								var end_date = msclass.formatDate(start_p);
								
								var panelchart = Ext.create('Ext.panel.Panel', {
									//layout	: 'fit',
									autoScroll	: true,
									layout: 'anchor',
									height	: 1000,
									items	: [{
										xtype: 'tableauviz',
										height	: 1000,
										id		: 'tableauviz',
										flex	: 1,
										vizUrl	: "http://192.168.104.167:8000/trusted/"+tiketnumber+"/#/views/Book2/Dashboard2?startdate="+start_date+"&endate="+end_date+"&sbu="+oksparams.sbu+"&:refresh=yes"
									}]
								});
								//console.log(end_date);
								//console.log("http://192.168.104.167:8000/trusted/"+tiketnumber+"/#/views/Book2/Dashboard2?startdate="+start_date+"&endate="+end_date+"&sbu="+oksparams.sbu+"&refresh=yes");
								
								Ext.getCmp("panelprovisionalvalidasi").add(panelchart);
								Ext.getCmp("panelprovisionalvalidasi").doLayout();
								//Ext.getCmp('kolombulan').setText( days[d.getMonth()+1] + ", " + d.getFullYear());
								/*
								if(oksparams.sbu != 'undefined' && oksparams.area == '')
								{									
									var v_area = "";
									var v_reffcode = "";
									Init.storeArea.each(function(record){
										Ext.each(record.data, function(datarow, index) {
										  v_area +=""+datarow.namearea+",";
										  v_reffcode +=""+datarow.reffcd+"','";
										});
									});
									var v_area = v_area.substring(0, v_area.length - 1);
									var v_reffcode = v_reffcode.substring(0, v_reffcode.length - 3);									
									// oksparams.area = v_area;	

								storekelamr.getProxy().extraParams = {	
									startt : oksparams.startt,
									sbu : oksparams.sbu,
									area : oksparams.area,
									keterangan : oksparams.keterangan
									
								};
									
								} else {
								storekelamr.getProxy().extraParams = {	
									startt : oksparams.startt,
									sbu : oksparams.sbu,
									area : oksparams.area,
									streamid : oksparams.stream,
									keterangan : oksparams.keterangan
								};								
								}								
								
								storekelamr.loadPage(1,{method: 'POST'});
								*/								
								
							}
						},
						{
							text	: 'Reset',
							iconCls : 'arrow_refresh',
							handler	: function()
							{
								this.up('form').getForm().reset();
							}
						}
				]
		});

		this.callParent(arguments);
	}
	});