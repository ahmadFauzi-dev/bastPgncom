Ext.define('analisa.nonamr.view.gridkoreksinonamr' ,{
	extend: 'Ext.panel.Panel',    
	initComponent	: function()
	{
		
		var gridnonamrrejecto = Ext.create('analisa.nonamr.view.korekrejecto');	
		var msclass = Ext.create('master.global.geteventmenu'); 
		var event = Ext.decode(msclass.getevent(Init.idmenu));
		
		var d = new Date();
		var m = (d.getMonth()+1).toString();
		if (m.length < 2 ) { m = '0'+m;}
		var f = d.getFullYear()+'-'+m+'-'+d.getDate();	
		
		var queryy = " getkoreksi_avr('', '', '2017-08-01', '2017-08-25', '', '', '1,2','', '','', '', 9) ";
		var queryydetail = " getkoreksi_avr('', '', '2017-08-01', '2017-08-25', '', '', '1,2','', '','', '', 0) ";
		var queryypengukuran = " getvaldy_avr_pengukuran('','','2017-08-25','2017-08-25','','','1','0120025926','',2,2) ";
		
		var modelGridkoreksinonamr = msclass.getmodel(queryy);
		
		var modelGridpengukuran = msclass.getmodel(queryypengukuran);
		modelGridpengukuran.push({name : 'selectopts', type:'boolean'},{name : 'kategori',type:'string'},{name : 'field',type:'string'},{name : 'field',type:'string'});
		
		var modelkoreksiDetail = msclass.getmodel(queryy);
		var columnss 	 = msclass.getcolumngrid('gridDatakoreksi', queryy);		
		var columnsdetail 	 = msclass.getcolumngrid('gridDatakoreksiDetail', queryydetail);		
		var columnsstatus 	 = msclass.getcolumngrid('gridPengukuranKoreksinonamr',queryypengukuran);		
		var filters 		 = [];		
		var filter 		 = [];	
		
		var storekoreksiDetail = msclass.getstore(modelkoreksiDetail,queryy,filters);
		var storeGridpengukuran = msclass.getstore(modelGridpengukuran,queryypengukuran, filters);
		var storeGridkoreksinonamr = msclass.getstore(modelGridkoreksinonamr,queryy,filter);
				
		// console.log(modelGridnonamrDaily);
		// storeGridValidate.load();
		
		var GridkoreksiDetail = Ext.create('Ext.grid.Panel',{
			store	: storekoreksiDetail,
			loadMask: true, 
			id		: 'gridDetailKoreksi',	
			viewConfig: {
				listeners: {
					refresh: function(dataview) {
						Ext.each(dataview.panel.columns, function(column) {
							if (column.autoSizeColumn === true)
								column.autoSize();
						})
					}
				}
			},
			columns		: columnsdetail
		
		});	
		
		columnsstatus[3].renderer = function(value, metaData, record, rowIdx, colIdx, store, view){	
						var color = '';
					if(record.get('approved') == "1")
					{
						if(record.get('stat') == "2") 
						{
							color = base_url+'asset/ico/green_indicator.ico';
						} else if (record.get('stat') == "1")
						{
							color = base_url+'asset/ico/yellow_green_indicator.ico';
						} else {
							color = base_url+'asset/ico/red_green_indicator.ico';
						}
						
					}else {
						if(record.get('stat') == "2") 
							{
								color = base_url+'asset/ico/green_indicator.ico';
							} else if (record.get('stat') == "1")
							{
								color = base_url+'asset/ico/yellow_indicator.ico';
							} else {
								if (record.get('a_spare_1') == "0")
								{
									color = base_url+'asset/ico/black_indicator.ico';
								} else {
									color = base_url+'asset/ico/red_indicator.ico';
								}
							}						
					} 
					return '<div><img src='+color+' width="16px" height="16px"></div>';

				};
		
		var Gridpengukuran = Ext.create('Ext.grid.Panel',{
			store	: storeGridpengukuran,
			loadMask: true, 
			multiSelect	: true,
			selType		: 'checkboxmodel',
			selModel: {
					injectCheckbox: 0,
					pruneRemoved: false,
					showHeaderCheckbox: true
				},	
			id		: 'GridpengukuranKoreksi',		
			columns		: columnsstatus,
			viewConfig: {
				listeners: {
					refresh: function(dataview) {
						Ext.each(dataview.panel.columns, function(column) {
							if (column.autoSizeColumn === true)
								column.autoSize();
						})
					}
				}
			},
			listeners	: 
			{
				select: function (model, record, index, eOpts) {
					var dataselect = record.data;
					record.set('selectopts',true);
				},
					deselect: function (view, record, item, index, e, eOpts) {
				}
			}
		
		});	
		
		var gridDatakoreki = Ext.create('Ext.grid.Panel',
		{	
			loadMask: true, 	
			store		: storeGridkoreksinonamr,
			id			: 'gridDatakoreki',		
		dockedItems: [
		{
			xtype: 'toolbar',
			items: [
				{
					text		: 'Approved',
					id		  	: 'approved_koreksinonamr',
					iconCls	: 'accept',
					hidden	: event.p_approve,
					// disabled: true,
					handler	: function()
					{
						var items = [];
						
						storeGridpengukuran.each(function(record){
							
							if (record.data.selectopts == true)
							{
								items.push(record.data);
								//console.log(record.data);
							}
							
						});
						
						//console.log(items.length);
						if(items.length != 0){
							var record 				= gridDatakoreki.getView().getSelectionModel().getSelection()[0];
							var gridrecord = GridkoreksiDetail.getView().getSelectionModel().getSelection()[2];
							var rowid 				= record.data.rowid;
							var fp = 0;
							var ft = 0;
							var reffidtaxation 		= record.data.codetaxation ;
							var priodeend 			= record.data.priodeendori ;
							var volcorrected 		= record.data.volcorrected ;
							console.log(record.data);
							record.data.isapproval = 0;
							if (record.data.isapproval == 1 )
							{
								Ext.Msg.show({
									title	: 'Error',
									msg		: "Data sudah di approved!!!",
									buttons	: Ext.Msg.OK,
									icon	: Ext.Msg.ERROR,
								});
								
							} else if (record.data.isapproval == 4)
							{
								Ext.Msg.show({
									title	: 'Error',
									msg		: "Data sudah di Reject!!!",
									buttons	: Ext.Msg.OK,
									icon	: Ext.Msg.ERROR,
								});
								
							} else
						
							{
								console.log(items);
								Ext.Ajax.request({ 
								url			: base_url+'analisa/nonamr/updatekoreksi',
								method: 'POST',
params:{'rowid' : rowid, 'reffidtaxation':reffidtaxation, 'priodeend' : priodeend, 'volcorrected' : volcorrected, 'ft' : ft, 'fp' : fp , data : Ext.encode(items)
								},
								success: function(response,requst){
									Ext.Msg.alert('Sukses','Data Telah di Approve');
									storeGridkoreksinonamr.reload();
									//storeGridDetailTaksasi.reload();
									//storeGridDetailPengukuran.reload();
									storekoreksiDetail.removeAll();
									storeGridpengukuran.removeAll();
								},
								failure:function(response,requst)
								{
									Ext.Msg.alert('Fail !','Input Data Gagal');
									Ext.Msg.alert('Warning!', 'Authentication server is unreachable : ' + action.response.responseText + "");
								}
							
								});
								 
							}
						}
						else{
							alert('Data pengukuran belum di pilih');
						}						
					}	
	
				},{
					text: 'Reject',
					id:'reject_koreksi',
					hidden	: event.p_reject,
					iconCls : 'cancel',
					// disabled: true,
					handler	: function()
					{
						Ext.Msg.confirm('Warning!', 'Anda Yakin..?', function(btn, text){
						//console.log(btn);
						if (btn == 'yes'){							
										Init.storeGridCopy = Ext.getCmp('gridrejectoss').getStore();
										var tabbbPanel = Ext.getCmp('tabkoreksiamr');
										var items = [];
										var exist = false;
										Init.storeGridCopy.removeAll();							
									
										/* StoreGridAmrTaksasi.each(function(record){
											Init.storeGridCopy.add(record.copy());
											//console.log(record.data);								
										}); */
										
										var record = GridAmrKoreksi.getView().getSelectionModel().getSelection()[0];
										//console.log(record.data.isapproval);
										Init.storeGridCopy.add(record.copy());
										if (record.data.isapproval == 4 )
										{
											Ext.Msg.show({
												title	: 'Error',
												msg		: "Data sudah di reject!!!",
												buttons	: Ext.Msg.OK,
												icon	: Ext.Msg.ERROR,
											});
										} else if (record.data.isapproval == 1)
										{
											Ext.Msg.show({
												title	: 'Error',
												msg		: "Data sudah di approved!!!",
												buttons	: Ext.Msg.OK,
												icon	: Ext.Msg.ERROR,
											});
											
										} else {
										
										/*tabbbPanel.items.each(function(c){							
											if (c.title == 'AMR Koreksi Reject') {
												tabbbPanel.setActiveTab('gridrejectoss');
												exist = true;
											}
										});*/
									
											if (!Init.existtabreject) {							
												tabbbPanel.add(gridrejectoss);
												tabbbPanel.child('#gridrejectoss').tab.show();							
												tabbbPanel.setActiveTab('gridrejectoss');
												Init.existtabreject = true;
											} else {
												tabbbPanel.child('#gridrejectoss').tab.show();							
												tabbbPanel.setActiveTab('gridrejectoss');
												
											}	
										}
						}
		});				
					}
				},{
					text: 'Download',
					id:'download_koreksi',
					disabled: true,
					hidden	: event.p_download,
					iconCls : 'folder_page',
					handler	: function()
					{
						var record 	= storeGridkoreksinonamr.getView().getSelectionModel().getSelection()[0]; 
						var file_scan = record.data.file_scan;
						//var file_name 		 = record.get('file_name_ori');
						//console.log(id);
						var url = "https://amr.pgn-solution.co.id" +"/"+ "uploads/" + file_scan + "";
						//console.log(url);
						if(file_scan != null){
							window.open(url);
						}
					}
				}
				,
				{
					text: 'Rebatch',
					id:'rebatch_tax',
					hidden	: event.p_rebatch,
					// disabled: true,
					iconCls : 'arrow_refresh',
					handler	: function (){} //showWindowForm
				}				
			]
		},
		{
			xtype: 'pagingtoolbar',
			dock: 'bottom',
			store: storeGridkoreksinonamr,
			displayInfo: true,
			plugins : [Ext.create('Ext.ux.PagingToolbarResizer')]
		}],			
			columns		: columnss,
			viewConfig: {
				listeners: {
					refresh: function(dataview) {
						Ext.each(dataview.panel.columns, function(column) {
							if (column.autoSizeColumn === true)
								column.autoSize();
						})
					}
				}
			},
		listeners	: {
			itemclick : function(model, record, index, eOpts) {
				var darecord = record.data ;
				console.log(darecord);
				var storepengukuran = Ext.getCmp('GridpengukuranKoreksi').getStore();
				var storedetail = Ext.getCmp('gridDetailKoreksi').getStore();
				storepengukuran.getProxy().extraParams = { view : " getvaldy_avr_pengukuran('','','"+darecord.priodestart+"','"+darecord.priodeend+"','','','"+darecord.streamid+"','"+darecord.customercode+"','',2,2) " };	
				storepengukuran.load();	
				storedetail.getProxy().extraParams = { view : " getkoreksi_avr('', '', '"+darecord.priodestart+"', '"+darecord.priodeend+"', '', '', '"+darecord.streamid+"','', '','', '"+darecord.codetaxation+"', 0) " };	
				storedetail.load();
			},
			select: function (model, record, index, eOpts) {
				var dataselect = record.data;
				// var storeanomali = Ext.getCmp('GridpengukuranKoreksi').getStore();
					// storeanomali.getProxy().extraParams = {
										// view : " getalert_avr('"+darecord.valdy_avrrowid+"', 2)"	
										// };	
					// storeanomali.load();	
					// record.set('selectopts',true);
				// console.log(record.data.selectopts);
				
			},
			deselect: function (view, record, item, index, e, eOpts) {
				//console.log('deselect fired'+index);
				//record.data.selectopts = false;
				// record.set('selectopts',false);
			}
			 
		}		
	}); 		
		
		// storeGridDaily.load();
		Ext.apply(this,{
			title  		: 'Non AMR Data Koreksi',			
			frame: true,			
			iconCls 	: 'application_view_gallery',
			layout: 'border',
			defaults: {
                collapsible: true,
                split: true,
                //bodyStyle: 'padding:5px'
            },
			items: [
				{
					xtype : 'panel',
					title : 'Data Koreksi Non AMR',
					frame	: true,
					region : 'center',
					layout: 'fit',
					collapsible: false,
					flex: 2,					
					// autoScroll : true,
					border: false,
					items: gridDatakoreki
					
				},	
				{
					xtype : 'panel',
					autoScroll : true,
					region : 'east',
					frame	: true,
					border	: false,
					title : 'Status Pengukuran',
					layout: 'fit',					
					flex: 2,
					items : Gridpengukuran
				},				
				{
					xtype : 'panel',
					autoScroll : true,
					region : 'south',
					frame	: true,
					border	: false,
					title : 'Data Detail',
					layout: 'fit',					
					flex: 2,
					items : GridkoreksiDetail
				}
			]
		});
		this.callParent(arguments);
	}
});