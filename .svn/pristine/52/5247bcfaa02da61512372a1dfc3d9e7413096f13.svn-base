Ext.define('monitoring.view.formpelvalidasi' ,{
		extend: 'Ext.form.Panel',
		// alias : 'widget.formvalidamr',
		initComponent: function() {	
			
			Init.storeSBU.load();
			Init.storeArea.load();
			
			Ext.apply(this, {
				frame		: false,
				border		: false,
				layout		: 'form',
				frame  		: false,
				method		: 'POST',
				// url			: base_url+'admin/findamr',
				bodyPadding: '5 5 0',
				fieldDefaults: {
					labelAlign: 'left',
					anchor: '35%'
				},
				id			: 'formPelValidasi',
				items		: 
				[			
					{
						xtype: 'monthfield',
						submitFormat: 'Y-m',
						name: 'startt',
						fieldLabel: 'Start Month',
						format: 'F, Y',
						id : 'startbulandata'
					},
					{
						xtype: 'monthfield',
						submitFormat: 'Y-m',
						name: 'endd',
						fieldLabel: 'End Month',
						format: 'F, Y',
						id : 'endbulandata'
					},
					{
						xtype		: 'combobox',
						fieldLabel	: 'RD',						
						name		: 'sbu',
						displayField: 'description',
						valueField: 'description',
						queryMode: 'local',									
						store: Init.storeSBU,
						listeners : {
							select: function(combo) 
							{
								 var values = combo.getValue(),
								 record = combo.findRecordByValue(values);
								 //console.log(record.data.rowid);
								 Init.storeArea.reload({ params : { sbu : record.data.rowid }});
								
							 }
						 }

						
					},
					{
						xtype		: 'combobox',
						fieldLabel	: 'Area',						
						name		: 'area',
						afterLabelTextTpl: Init.required,
						displayField: 'namearea',
						valueField: 'namearea',
						queryMode: 'local',									
						store: Init.storeArea
					},
					{
						xtype		: 'textfield',
						fieldLabel	: 'ID Pelanggan',
						name		: 'id_pel'						
					},
					{
						xtype		: 'textfield',
						fieldLabel	: 'Nama Pelanggan',
						name		: 'pelname'						
						
					},
					{
						xtype		: 'combobox',
						fieldLabel	: 'Keterangan',						
						name		: 'keterangan',
						displayField: 'name',
						valueField: 'name',
						queryMode: 'local',
						store: new Ext.data.ArrayStore({
									id: 0,
									fields: [										
										'name'
									],
									data: [['Volume'],['GHV'],['Energy'],['All']]
						})
					} 					
					

				],
				buttons		: [
				{
						text	: 'Search',
						iconCls : 'magnifier',
						handler	: function()
						{
							
							var findform = this.up('form').getForm();
							var oksparams = findform.getValues();
							if (oksparams.area !== '' ){
							var storekelamr = Ext.getCmp('grid_pelvalidasi').getStore();
							
							storekelamr.getProxy().extraParams = {	
								startt : oksparams.startt,
								endd : oksparams.endd,
								sbu : oksparams.sbu,
								area : oksparams.area,
								id_pel : oksparams.id_pel,
								pelname : oksparams.pelname,
								keterangan : oksparams.keterangan
							};
							storekelamr.loadPage(1,{method: 'POST'});	
							} else {
								Ext.Msg.show({
								title	: 'Error',
								msg		: "Area Tidak Boleh Kosong!!!",
								buttons	: Ext.Msg.OK,
								icon	: Ext.Msg.ERROR,
								});
							}
							
						}
						},
						{
							text	: 'Reset',
							iconCls : 'arrow_refresh',
							handler	: function()
							{
								this.up('form').getForm().reset();
							}
						}
				]
		});

		this.callParent(arguments);
	}
	});