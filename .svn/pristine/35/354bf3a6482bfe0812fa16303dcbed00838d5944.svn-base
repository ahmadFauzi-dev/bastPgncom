<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

class Koreksi extends MY_Controller {

	function __construct() {		
        parent::__construct();        
    }
	
	public function index ()
	{
		vd::dump($this->session->userdata('username'));
	}
	
	public function updatekoreksi()
	{
		$this->load->model('b_model');	
		$datass 		= $this->input->post('data', TRUE);
		$rowid 			= $this->input->post('rowid',true);
		$ft 			= $this->input->post('ft',true);
		$fp 			= $this->input->post('fp',true);
		$volcorrected 	= $this->input->post('volcorrected',true);
		$refftaxation 	= $this->input->post('refftaxation',true);
		$priodeend 		= $this->input->post('priodeend',true);
		$datapost 	= json_decode($datass);
		$setun1 	= array();	
		
		foreach ($datapost as $items)
		{
			$upfilt  = array('rowid' => $items->reffamralertid);
			$dataapp = array(
				'isapproval' => 1,
				'updperson' => $this->session->userdata('username'),				
				'upddate' => dateTonum(date('Y-m-d H:i:s'))
			);
			$penyaluranid = $items->penyaluranid;
			$ambil=array(
				'sbu'  => $items->sbu,
				'area'  => $items->areacode,
				'streamid'  => $items->stream,
				'idpel'  => $items->id_pel,
				'pelname'  => $items->namapel,
				// 'typeapproved' => $items->stat,
				'typeapproved' => 0,
				'penyaluranid' => $items->penyaluranid
				);
				
			if (!empty($penyaluranid)){
				$unapp = array('penyaluranid' => $penyaluranid );
				$dataupdate = array(				
					'updperson' => $this->session->userdata('username'),				
					'upddate' => dateTonum(date('Y-m-d H:i:s')),				
					'status' => 2,
					'isapproval' => 2,
					'reffidtaxation' => $rowid
				);	
				$this->b_model->update_all('penyaluran_amr_daily', $unapp , $dataupdate);
			}
			$this->b_model->update_all('amr_alert_daily', $upfilt , $dataapp);
		} 
		$a_datanya = array(	
			'fdvc'  =>$volcorrected,
			'sbu'  =>$ambil['sbu'],
			'area'  =>$ambil['area'],
			'streamid'  =>$ambil['streamid'],
			'idpel'  =>$ambil['idpel'],
			'pelname'  =>$ambil['pelname'],
			'fdatetime'  =>$priodeend,
			'reffidtaxation' => $rowid,				
			'fdate'  => intval(substr($priodeend,6,2)),
			'fmonth'  => intval(substr($priodeend,4,2)),
			'fyear'  => intval(substr($priodeend,0,4)),
			'fp'  => floatval($fp),
			'ft'  => floatval($ft),
			'delflag' => 1,									
			'creperson' => $this->session->userdata('username'),				
			'credate' => dateTonum(date('Y-m-d H:i:s')),				
			'isapproval' => 1,
			'typeapproved' => $ambil['typeapproved']				
		); 
		
		$appr = $this->b_model->insert_data('penyaluran_amr_daily', $a_datanya);			
		$a_datanya['penyaluran_amr_dailypenyaluranid'] = "pad".$appr ;
		$this->b_model->insert_data('h_penyaluran_amr_daily', $a_datanya);
		
		$where = array('rowid' => $rowid);
		$c_datanya = array(				
					'delflag' => 1,									
					'updperson' => $this->session->userdata('username'),				
					'isapproval' => 1
		);
		
		$setun2 = $this->b_model->update_all('taxation', $where, $c_datanya);
		$json['success'] = true;
		$json['data'] = $setun1;	
	    echo json_encode($json);	
	}
	
	public function updatekoreksi_asli()
	{
		$this->load->model('b_model');	
		$datass 		= $this->input->post('data', TRUE);
		$rowid 			= $this->input->post('rowid',true);
		$volcorrected 			= $this->input->post('volcorrected',true);
		$refftaxation = $this->input->post('refftaxation',true);
		$datapost 	= json_decode($datass);
		$setun1 	= array();		
		foreach ($datapost as $items)
		{
			$upfilt  = array('rowid' => $items->reffamralertid);
			$dataapp = array(
				'isapproval' => 1,
				'updperson' => $this->session->userdata('username'),				
				'upddate' => dateTonum(date('Y-m-d H:i:s'))
			);

			$a_datanya = array(				
				'reffidamrbridgedaily'  =>$items->reffidamrbridgedaily,
				'reffamralertid'  =>$items->reffamralertid,
				'sbu'  =>$items->sbu,
				'area'  =>$items->areacode,
				'streamid'  =>$items->stream,
				'idpel'  =>$items->id_pel,
				'pelname'  =>$items->namapel,
				'fdatetime'  =>$items->fdatetime,
				'fdate'  =>$items->fdate,
				'fmonth'  =>$items->fmonth,
				'fyear'  =>$items->fyear,
				'fdvm'  =>$items->fdvm,
				//isi
				// 'fdvc'  =>$items->fdvc,
				'fdvc'  =>$volcorrected,
				
				'fvm'  =>$items->fvm,
				'fvc'  =>$items->fvc,
				'fp'  =>$items->fp,
				'ft'  =>$items->ft,
				'status' => 1,
				'typeapproved' => $items->stat,
				'delflag' => 1,									
				'creperson' => $this->session->userdata('username'),				
				'credate' => dateTonum(date('Y-m-d H:i:s')),				
				// 'updcnt' => 1,
				'isapproval' => 1,
				'reffidtaxation' => $rowid
			);
			
			$appr = $this->b_model->insert_data('penyaluran_amr_daily', $a_datanya);			
			$a_datanya['penyaluran_amr_dailypenyaluranid'] = "pad".$appr ;
			$this->b_model->insert_data('h_penyaluran_amr_daily', $a_datanya);
			$this->b_model->update_all('amr_alert_daily', $upfilt , $dataapp);
			array_push($setun1, $a_datanya);
		}
		
		$where = array('rowid' => $rowid);
		$c_datanya = array(				
					'delflag' => 1,									
					'updperson' => $this->session->userdata('username'),				
					// 'upddate' => dateTonum(date('Y-m-d H:i:s')),				
					'isapproval' => 1
					//, 'updcnt' => 1
		);
		
		$setun2 = $this->b_model->update_all('taxation', $where, $c_datanya);
		// $this->db->last_query();
		$json['success'] = true;
		$json['data1'] = $setun1;	
		$json['data2'] = $setun2;	
	    echo json_encode($json);
	
	}	
	
	public function findamrkoreksi ()
	{
		
	    $this->load->model('b_model');
		
		// default:  lepasin saya
		// $kemarin = whereTofilter('createdate', date("Y-m-d", time() - 86400) , 'date' , 'lt');
		// $kemarinlusa = whereTofilter('createdate', date("Y-m-d", time() - 172800) , 'date' , 'gt');
		$bulankemarin = whereTofilter('createdate', date( "Y-m-d", time() - 86400) , 'date' , 'lt');
		$bulankemarinlusa = whereTofilter('createdate', date( "Y-m-d", strtotime( "-2 month" )) , 'date' , 'gt');
		$canrd = whereTofilter('sbuname', $this->session->userdata('rd') , 'list' , '');	
		$canarea = whereTofilter('areaname', $this->session->userdata('area') , 'list' , '');		
		
		$filter = $this->input->get('filter', TRUE) > ''? $this->input->get('filter', TRUE) : array();
			
		$startt = $this->input->get('startt',true) > '' ? whereTofilter('createdate', $this->input->get('startt',true) , 'date' , 'gt') : $bulankemarinlusa ;
		$endd = $this->input->get('endd',true) > '' ? whereTofilter('createdate', $this->input->get('endd',true) , 'date' , 'lt') : $bulankemarin ;		
		$sbu = $this->input->get('sbu',true) > '' ? whereTofilter('sbuname', $this->input->get('sbu',true) , 'string' , 'eq') : $canrd ;
		$area = $this->input->get('area',true) > '' ? whereTofilter('areaname', $this->input->get('area',true) , 'string' , 'eq') : $canarea ;
		$id_pel = $this->input->get('id_pel',true) > '' ? whereTofilter('customercode', $this->input->get('id_pel',true) , 'string' , 'eq') : '' ;
		$namapel = $this->input->get('namapel',true) > '' ? whereTofilter('customername', $this->input->get('namapel',true) , 'string' , '') : '' ;	
		$status = $this->input->get('status',TRUE);
		
		if ($status == 0 ) {
			$statusnya = whereTofilter('isapproval', 'null' , 'boolean' , 'null');
		} else if ($status == 1 || $status == 4 ) {
			$statusnya = whereTofilter('isapproval', $status , 'numeric' , 'eq');
		} else {
			$statusnya = "";
		}
				
		$filterojan = whereTofilter('jenisba', 9,  'numeric' , 'eq') ;
		
		array_push($filter, $startt,  $endd, $sbu, $area, $filterojan , $id_pel, $statusnya, $namapel );
				
		$limit = $this->input->get('limit', TRUE) > '' ? $this->input->get('limit', TRUE) : 25;
	    $offset = $this->input->get('start', TRUE);
	    
	    $sorts = json_decode($this->input->get('sort', TRUE));
	    if ($sorts) {
		    foreach ($sorts as $sort) {
		        $orders[] = $sort->property.' '.$sort->direction;
		    }
		    $order_by = implode(', ', $orders);
	    } 
		else {
	    	$order_by = 'badate desc';
	    }		

	    $total_entries 	= $this->b_model->count_all_data('v_koreksi', $filter);
		$entries 		= $this->b_model->get_all_data('v_koreksi', $filter , $limit, $offset, $order_by);		
		
	    $data['success'] = true;
	    $data['total'] = $total_entries;
	    $data['data'] = $entries;    
		
	    extjs_output($data);
		
	}
		
	public function findamrdetailkoreksi ()
	{
		
	    $this->load->model('b_model');
		
		// default:  lepasin saya
		//$kemarin = whereTofilter('createdate', date("Y-m-d", time() - 86400) , 'date' , 'lt');
		//$kemarinlusa = whereTofilter('createdate', date("Y-m-d", time() - 172800) , 'date' , 'gt');
		
		$filter = $this->input->get('filter', TRUE) > ''? $this->input->get('filter', TRUE) : array();	
		
		$startt = $this->input->get('startt',true) > '' ? whereTofilter('createdate', $this->input->get('startt',true) , 'date' , 'gt') : '' ;
		$endd = $this->input->get('endd',true) > '' ? whereTofilter('createdate', $this->input->get('endd',true) , 'date' , 'lt') : '' ;		
		$sbu = $this->input->get('sbu',true) > '' ? whereTofilter('sbuname', $this->input->get('sbu',true) , 'numeric' , 'eq') : '' ;
		$area = $this->input->get('area',true) > '' ? whereTofilter('areaname', $this->input->get('area',true) , 'numeric' , 'eq') : '' ;
		$id_pel = $this->input->get('id_pel',true) > '' ? whereTofilter('customercode', $this->input->get('id_pel',true) , 'numeric' , 'eq') : '' ;
		$namapel = $this->input->get('namapel',true) > '' ? whereTofilter('customername', $this->input->get('namapel',true) , 'string' , '') : '' ;
		
		$codetax = $this->input->get('codetax',true) > '' ? whereTofilter('codetaxation', $this->input->get('codetax',true) , 'string' , 'eq') : '' ;		
		$filterojan = whereTofilter('jenisba', 9,  'numeric' , 'noteq');		
		$isapproval = whereTofilter('isapproval', 0,  'numeric' , 'eq');		
		
		array_push($filter, $startt,  $endd, $sbu, $area, $codetax , $filterojan , $id_pel, $namapel, $isapproval);
		//var_dump($filter); 		
		
		$limit = $this->input->get('limit', TRUE) > '' ? $this->input->get('limit', TRUE) : 25;
	    $offset = $this->input->get('start', TRUE);
	    
	    $sorts = json_decode($this->input->get('sort', TRUE));
	    if ($sorts) {
		    foreach ($sorts as $sort) {
		        $orders[] = $sort->property.' '.$sort->direction;
		    }
		    $order_by = implode(', ', $orders);
	    } else {
	    	$order_by = 'badate asc';
	    }
		
		//var_dump($order_by);
	    $total_entries 	= $this->b_model->count_all_data('v_koreksi', $filter);
		$entries 			= $this->b_model->get_all_data('v_koreksi', $filter , $limit, $offset, $order_by);		
		
	    $data['success'] = true;
	    $data['total'] = $total_entries;
	    $data['data'] = $entries;    
		
	    // vd::dump($data); 
	    extjs_output($data);
	}
	
	public function updaterejectkoreksi()
	{
		
		$this->load->model('b_model');	
		$datass = $this->input->post('datagrid', TRUE);
		$user_email = $this->session->userdata('user_email');
		$group_email = $this->session->userdata('group_email');
		$group_exp	  = explode(';',$group_email);		
		$to			  = array($user_email);	
		foreach($group_exp as $emp)
		{
			array_push($to,$emp);
		}

		$filter[0]['field'] = "isinfo";
		$filter[0]['data']  = array("comparison"	=> "eq",
								   "type"		=> "numeric",
								   "value"		=> 9);
		
		$filter[1]['field'] = "areacode";
		$filter[1]['data']  = array("comparison"	=> "eq",
								   "type"			=> "string",
								   "value"			=> $this->input->post('areaval'));
								   
		$datatemplate = $this->b_model->get_all_data('general_info', $filter , 2 , 0 , '');
		
		$email_temp   = $datatemplate[0]->email;
		$email_exp	  = explode(';',$email_temp);

		foreach($email_exp as $emp)
		{
			array_push($to,$emp);
		}

		$subject 	= $datatemplate[0]->subject;
		$pesan 		= $datatemplate[0]->template;		
		
		$datapost = json_decode($datass);
		$setun = array();
		
		$n=0;		
		$m=0;		
		$path = substr(BASEPATH,0,-7).'asset/xls/';
		$topath = substr(BASEPATH,0,-7).'asset/tmp/';	
		$objReader = PHPExcel_IOFactory::createReader('Excel5');
		$objPHPExcel = $objReader->load($path.'reject_data_kortak.xls');
		$baseRow = 4;		
		$baseRow2 = 11;		
		$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Reject Data Koreksi' );	
		$objPHPExcel->getActiveSheet()->setCellValue('A2', 'Data Koreksi' );	
		$objPHPExcel->getActiveSheet()->setCellValue('A8', 'Detail Data Koreksi' );	
		
		foreach ($datapost as $items)
		{
			$row = $baseRow + $n;
			$wherepeng  = array('id_pel' => $items->customercode, 'tanggal' => $items->priodeend);
			$codetax 	= array('codetaxation' => $items->codetaxation, 
								'jenisba <>' => 9
								) ;	
			
			$wheretax 	= array('codetaxation' => $items->codetaxation);
			$where_tax = array('rowid' => $items->rowid);
			$fieldsval = "";
			foreach ($items->field as $r)
			{
				$fieldsval .=$r.",";
			}
			$fieldsval = substr($fieldsval,0,-1);
			$datainfo = array (	
				'reffidtaxation' => $items->rowid,
				'category' => $items->kategori,
				'fields' => $fieldsval,
				'keterangan' => $items->keterangan,
				'creperson' => $this->session->userdata('username'),				
				'credate' => dateTonum(date('Y-m-d H:i:s'))			
			);
			$ambil = array('streamid'	=> $items->streamid,'reffidtaxation'=> $items->rowid,'sbu' => $items->sbuname, 'area' => $items->areaname, 'id_pel' => $items->customercode, 'namapel' => $items->customername, 'tanggal' => $items->priodeend,'fdvc' => $items->volcorrected,'noref' => $items->noref, 'priodestartori' => $items->priodestartori , 'priodeendori' => $items->priodeendori
			);
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $n+1)							  
							  ->setCellValue('B'.$row, $items->sbuname)
							  ->setCellValue('C'.$row, $items->areaname)
							  ->setCellValue('D'.$row, "'".$items->customercode)
							  ->setCellValue('E'.$row, $items->customername)
							  ->setCellValue('F'.$row, $items->streamid)
							  ->setCellValue('G'.$row, $items->priodestart)
							  ->setCellValue('H'.$row, $items->priodeend)
							  ->setCellValue('I'.$row, $items->volcorrected)
							  ->setCellValue('J'.$row, $items->description)
							  ->setCellValue('K'.$row, date('Y-m-d H:i:s'))
							  ->setCellValue('L'.$row, $items->kategori)
							  ->setCellValue('M'.$row, $fieldsval)
							  ->setCellValue('N'.$row, $items->keterangan)
							  ->setCellValue('O'.$row, $this->session->userdata('username'));			
			array_push($setun, $datanya);
			$n++;			
		}	

		$entries 		= $this->b_model->get_all('v_koreksi', $codetax );		
		// $datapeng 		= $this->b_model->get_all('v_koreksipengukuran', $wherepeng );
		$datapeng 		=  $this->b_model->get_func($ambil['noref'],intval($ambil['streamid']), $ambil['priodestartori'] , $ambil['priodeendori'], $ambil['area']);
		//var_dump(''.$ambil['noref'],intval($ambil['streamid']), $ambil['priodestartori'] , $ambil['priodeendori'], $ambil['area'].'');
		//var_dump($datapeng);
		//die();
		foreach ($entries as $intex)
		{
			$row = $baseRow2 + $m;	
			$objPHPExcel->getActiveSheet()->setCellValue('A'.$row, $m+1)							  
							  ->setCellValue('B'.$row, $intex->description)
							  ->setCellValue('C'.$row, $intex->meterserialno)
							  ->setCellValue('D'.$row, $intex->badate)
							  ->setCellValue('E'.$row, $intex->banumber)
							  ->setCellValue('F'.$row, $intex->uncorrectedstart)
							  ->setCellValue('G'.$row, $intex->uncorrectedend)
							  ->setCellValue('H'.$row, $intex->correctedstart)
							  ->setCellValue('I'.$row, $intex->correctedend)
							  ->setCellValue('J'.$row, $intex->volcorrected)
							  ->setCellValue('K'.$row, $intex->pressure)
							  ->setCellValue('L'.$row, $intex->temperature)
							  ->setCellValue('M'.$row, $intex->co2)
							  ->setCellValue('N'.$row, $intex->n2)
							  ->setCellValue('O'.$row, $intex->sg)
							  ->setCellValue('P'.$row, $intex->remarks);			
			
			$m++;
		}		
		
		if (!empty($datapeng)) {		
		
			foreach ($datapeng as $ims)
			{
				$datpengnya = array(
					'penyaluran_amr_dailypenyaluranid' => '99',
					'reffidamrbridgedaily' 	=> $ims->reffidamrbridgedaily,
					'reffamralertid' 		=> $ims->reffamralertid,
					'sbu' 		=> $ims->sbu,
					'area'		=> $ims->areacode,
					'streamid' 	=> $ims->stream,
					'idpel' => $ims->id_pel,
					'pelname' => $ims->namapel,
					'fdatetime' => $ims->fdatetime,			
					'fdate' => $ims->fdate,
					'fmonth' => $ims->fmonth,
					'fyear' => $ims->fyear,				
					'fdvm' =>$ims->fdvm,
					'fdvc' =>$ims->fdvc,
					'fvm' =>$ims->fvm,
					'fvc' =>$ims->fvc,				
					'fp' =>$ims->fp,
					'ft' =>$ims->ft,
					'reffidtaxation' => $ambil['reffidtaxation'],
					'status' => 4,
					'delflag' => 1,
					'creperson' => $this->session->userdata('username'),				
					'credate' => dateTonum(date('Y-m-d H:i:s')),				
					'updcnt' => 1,
					'isapproval' => 0,
					'typeapproved' => $ims->stat
				);				
			
			}
			$datareject = $this->b_model->insert_data('h_penyaluran_amr_daily', $datpengnya);
			$sial = 'padh'.$datareject;
			$datainfo['reffidpengukuran'] = $sial; 
		} 		 
		
		$this->b_model->insert_data('reject_info', $datainfo);	
		$c_datanya = array(				
			'delflag' => 1,									
			'updperson' => $this->session->userdata('username'),				
			'isapproval' => 4
		);
		$this->b_model->update_all('taxation', $where_tax, $c_datanya);		
		
		$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
		$file = "".$topath."Reject_Data_Koreksi". $sial. ".xls";
		$objWriter->save($file);

		$this->send_emailmultiaddress( $to, $subject, $pesan, $file );
		delete_files( $topath );
		$dadum['success'] = true;
		$dadum['data'] = $setun;	
	    echo json_encode($dadum);	
	
	}
	
	public function detailpengukuran()
	{
		$this->load->model('b_model');
	    $filter = $this->input->get('filter', TRUE) > ''? $this->input->get('filter', TRUE) : array();		
		$startt = $this->input->get('pstart',true) ;
		$endd = $this->input->get('pend',true) ;
		$area = $this->input->get('area',true) ;
		$idrefpelanggan 	= $this->input->get('idrefpelanggan',true)  ;		
		$stream 	= $this->input->get('stream',true)  ;		
		
		// array_push($filter, $startt,  $endd, $idrefpelanggan);
		//var_dump($filter); 		
			    
	    //$total_entries 	= $this->b_model->count_all_data('getdata_alert_pengukuran(548270, 20160601000000, 20160602000000, "Jakarta")', $filter);
		//$qs="getdata_alert_pengukuran(548270,20160601000000,20160602000000, 'Jakarta')";
		// $qs="getdata_alert_pengukuran(548270, 20160601000000, 20160602000000, 'Jakarta')";
		//$q="getdata_alert_pengukuran(548270".chr(44)." 20160601000000".chr(44)." 20160602000000".chr(44)." 'Jakarta')";
		// $entries 	= $this->b_model->get_all_data($qs, $filter , $limit, $offset, $order_by);	
		
		$total_entries	= $this->b_model->total_func($idrefpelanggan, $stream,$startt , $endd,  $area);
		$entries 		= $this->b_model->get_func($idrefpelanggan, $stream, $startt , $endd, $area);		
		
	    $data['success'] = true;
	    $data['total'] = $total_entries;
	    $data['data'] = $entries;
		
	    // vd::dump($data); 
	    extjs_output($data);
		
	}

} 